<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99998</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
surf=surface_create(800,608);
surf2=surface_create(800,608);

view_surface_id[0]=surf;

t=0;
intensity=0;
radius=200;


ii=0;

numbers[ii]="I"; ii++;
numbers[ii]="II"; ii++;
numbers[ii]="III"; ii++;
numbers[ii]="IV"; ii++;
numbers[ii]="V"; ii++;
numbers[ii]="VI"; ii++;
numbers[ii]="VII"; ii++;
numbers[ii]="VIII"; ii++;
numbers[ii]="IX"; ii++;
numbers[ii]="X"; ii++;
numbers[ii]="XI"; ii++;
numbers[ii]="XII"; ii++;

index=0;


freq=5;
theta=0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)) {
    view_surface_id[0]=-1;
    surface_free(surf);
}
if(surface_exists(surf2)) {
    surface_free(surf2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t++;
theta=5*dsin(freq*t);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)) {
    view_surface_id[0]=-1;
    surface_free(surf);
}
if(surface_exists(surf2)) {
    surface_free(surf2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(surf)){
    surf=surface_create(800,608);
    view_surface_id[0]=surf;
}
if(!surface_exists(surf2)){
    surf=surface_create(800,608);
}
surface_set_target(surf2);
draw_clear_alpha(c_white,1-intensity);
draw_set_alpha(1);
draw_set_colour(c_white);
draw_circle(400,304,radius,false);
draw_set_blend_mode_ext(bm_dest_alpha,bm_zero);
draw_surface(surf,0,0);
draw_set_blend_mode(bm_add);
with(objP3DBullet) draw_self();
draw_set_blend_mode(bm_normal);
surface_reset_target();


d3d_transform_set_translation(-400,304,0);
d3d_transform_add_rotation_z(theta);
d3d_transform_add_translation(400,-304,0);
draw_surface(surf2,0,0);
//draw_surface_ext(surf2,304*dsin(theta),-304+304*dcos(theta),1,1,theta,c_red,1);

d3d_transform_set_identity();



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
