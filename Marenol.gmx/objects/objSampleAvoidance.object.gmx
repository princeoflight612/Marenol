<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sample avoidance code by Princeoflight
//Works in YoYoYo-based environment
//Some code taken from Shift engine


musicID=musMarenol //Music used

t=0;
side=choose(-1,1);

RealStep=0;
OFFSET=95;

BEAT_TIME=0.381*50; //BEAT_TIME = time between beats. Use Audacity or a BPM detection tool to set it
BEAT_TIME=0.423*50;

enum marenolAvoidanceAttacks {
    INTRO,
    INTRO_TRAIN,
    PLATFORM_CONTRACTION,
    LONG_DROP,
    LONG_DROP_SPIRALS,
    LONG_DROP_END,
    MOOD_BREAKER,
    MOOD_BREAKER_LINE,
    MOOD_BREAKER_CURTAIN,
    MOOD_BREAKER_SHAPES,
    SAW_BOX,
    SAW_BOX_SETUP,
    SAW_BOX_TRIGGER,
    WATER,
    WATER_FLOWERS,
    WATER_FLOWERS_CONTRACTION,
    EYES,
    GREEN_SQUARES,
    TENTACLES,
    DECAY,
    DECAY_SLICE,
    THREADS,
    TRIANGLES_SQUARES,
    NOOSE,
    FINAL_FALL,
    ENDING_TEXT,
    END,
    NUM_ATTACKS
}

numTimings=marenolAvoidanceAttacks.NUM_ATTACKS;

timings[marenolAvoidanceAttacks.INTRO]=0;
timings[marenolAvoidanceAttacks.INTRO_TRAIN]=OFFSET;
timings[marenolAvoidanceAttacks.PLATFORM_CONTRACTION]=OFFSET+floor(4*BEAT_TIME);
timings[marenolAvoidanceAttacks.LONG_DROP]=OFFSET+floor(8*BEAT_TIME);
timings[marenolAvoidanceAttacks.LONG_DROP_SPIRALS]=OFFSET+floor(20*BEAT_TIME);
timings[marenolAvoidanceAttacks.LONG_DROP_END]=OFFSET+floor(36*BEAT_TIME);
timings[marenolAvoidanceAttacks.MOOD_BREAKER]=OFFSET+floor(40*BEAT_TIME);
timings[marenolAvoidanceAttacks.MOOD_BREAKER_LINE]=OFFSET+floor(44*BEAT_TIME);
timings[marenolAvoidanceAttacks.MOOD_BREAKER_CURTAIN]=OFFSET+floor(48*BEAT_TIME);
timings[marenolAvoidanceAttacks.MOOD_BREAKER_SHAPES]=OFFSET+floor(56.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.SAW_BOX]=OFFSET+floor(72.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.SAW_BOX_SETUP]=OFFSET+floor(88.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.SAW_BOX_TRIGGER]=OFFSET+floor(96.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.WATER]=OFFSET+floor(104.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.WATER_FLOWERS]=OFFSET+floor(121.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.WATER_FLOWERS_CONTRACTION]=OFFSET+floor(146*BEAT_TIME);
timings[marenolAvoidanceAttacks.EYES]=OFFSET+floor(154*BEAT_TIME);
timings[marenolAvoidanceAttacks.GREEN_SQUARES]=OFFSET+floor(170*BEAT_TIME);
timings[marenolAvoidanceAttacks.TENTACLES]=OFFSET+floor(186*BEAT_TIME);
timings[marenolAvoidanceAttacks.DECAY]=OFFSET+floor(202.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.DECAY_SLICE]=OFFSET+floor(226.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.THREADS]=OFFSET+floor(234.5*BEAT_TIME);
timings[marenolAvoidanceAttacks.TRIANGLES_SQUARES]=OFFSET+floor(251*BEAT_TIME);
timings[marenolAvoidanceAttacks.NOOSE]=OFFSET+floor(267*BEAT_TIME);
timings[marenolAvoidanceAttacks.FINAL_FALL]=OFFSET+floor(299*BEAT_TIME);
timings[marenolAvoidanceAttacks.ENDING_TEXT]=OFFSET+floor(332*BEAT_TIME);

timings[marenolAvoidanceAttacks.END]=OFFSET+floor(332*BEAT_TIME)+200;
timings[marenolAvoidanceAttacks.NUM_ATTACKS]=10000000;

attack=0;

debugSnaps[0]=0;
numDebugSnaps=0;
t=0;
t_music=0;
finish=false;


startTiming=0;
endTiming=floor(audio_sound_length(musicID)*50);

if(instance_number(object_index)&gt;1) {
    
    instance_destroy();
    exit;
}

scrPlayMusic(musicID,false);

cameraSpeed=0;
side=-1;
addY=0;
pointsX[0]=0;
playerX=0;
playerY=0;

shape_index=0;
shape_angle=random(360);

decayScale=1.0;


curtainY=608;
global.noDeath=false;
global.infJump=false;

t=60;
audio_sound_set_track_position(global.currentMusic,t/50);

djumpRefreshed=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Anti-desync - set RealStep according to music time


RealStep += room_speed * delta_time / 1000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment timer, sync to music
view_yview[0]+=cameraSpeed;
if(!instance_exists(objPlayer)||finish) exit;

if(!instance_exists(objPBossMarker)){
     instance_destroy();
     exit;
}
t++;
t_music=t;
//Anti-desync taken from Shift Engine.

if(t &gt; 0){
    var music_t = audio_sound_get_track_position(global.currentMusic) * 50;
    if(abs(t_music - music_t) &gt; 5){
        audio_sound_set_track_position(global.currentMusic,t_music / 50);
    }
}

if(t&gt;timings[attack+1]){
    if(t&gt;7800||t==numTimings-1){
        instance_destroy();
    }else{
        attack++;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug timeline

if(global.debugMode){
    if(keyboard_check_pressed(vk_space)){
        debugSnaps[numDebugSnaps]=t;
        numDebugSnaps++;
        show_debug_message(string(t));
    }
    if(point_in_rectangle(mouse_x,mouse_y,32,0,room_width-32,64)&amp;&amp;mouse_check_button_pressed(mb_left)){
        var trackPos=lerp(startTiming,endTiming,(mouse_x-32)/(room_width-64))
        audio_sound_set_track_position(global.currentMusic,trackPos/50);
        t=floor(trackPos);
        for(var i=0;i&lt;array_length_1d(timings);i++){
            if(trackPos*50&gt;timings[i]){
                attack=i;
                break;       
            }
        }
        with(objPEntity) {
            if(!child)
            instance_destroy();
        }
        
    }
    if(keyboard_check_pressed(ord("1"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance3);
        t=timings[marenolAvoidanceAttacks.MOOD_BREAKER]-1;
        attack=marenolAvoidanceAttacks.MOOD_BREAKER-1;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
    if(keyboard_check_pressed(ord("2"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance4);
        t=timings[marenolAvoidanceAttacks.SAW_BOX]-1;
        attack=marenolAvoidanceAttacks.SAW_BOX-1;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
    if(keyboard_check_pressed(ord("3"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance5);
        t=timings[marenolAvoidanceAttacks.WATER]-1;
        attack=marenolAvoidanceAttacks.WATER-1;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
    if(keyboard_check_pressed(ord("4"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance6);
        t=timings[marenolAvoidanceAttacks.EYES]-1;
        attack=marenolAvoidanceAttacks.EYES-1;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
    if(keyboard_check_pressed(ord("5"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance7);
        t=timings[marenolAvoidanceAttacks.DECAY]-1;
        attack=marenolAvoidanceAttacks.DECAY-1;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
    if(keyboard_check_pressed(ord("6"))){
        with(objPlayer) instance_destroy();
        room_goto(rPAvoidance7);
        t=timings[marenolAvoidanceAttacks.THREADS]-1;
        attack=marenolAvoidanceAttacks.THREADS-1;
        global.infJump=true;
        with(objPlayerStart) x-=300;
        audio_sound_set_track_position(global.currentMusic,t/50);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacks
var ct=t-timings[attack];
var BT=BEAT_TIME;


switch(attack){ //Main attack loop
    case marenolAvoidanceAttacks.INTRO:
    {
        if(ct mod floor(BT)==1){ //Sample attack format. Spawn bullets every beat
        //Always floor the BT otherwise the code won't work
            //var obj=instance_create_ext(400,304,objPBullet,6,random(360),random_range(0.8,1.2),1);
        }   
        
        with(objPBullet){ //Example of the tag system. Define bullet behaviour depending on the tag
            if(tag==1){ //All bullets with the variable tag assigned to 1 are set to curve
                direction+=1;
            }
        }
        if(ct==1){
            
        }
        break;
    }
    case marenolAvoidanceAttacks.INTRO_TRAIN:
    {
        if(ct==1){
            with(instance_create(0,0,objPBloodRed)) image_alpha=0;
            
            
        }
        view_xview[0]=random_range(-8,8);
        view_yview[0]=random_range(-8,8);
        if(ct % 4 == 0 ){
            repeat(20){
                var obj=instance_create_ext(random(800),0,objPBullet,random_range(5,20),-random(180),1,0);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=4;
                obj.killer=false;
                var obj0=instance_create_ext(random(800),608,objPBullet,random_range(5,20),random(180),1,0);
                obj0.sprite_index=sprPCircleInverted;
                obj0.image_index=4;   
                obj0.killer=false;             
            }
        }
        with(objPBullet){
            if(tag!=999){
            image_xscale-=0.02;
            image_yscale-=0.02;
            }
        }
        if(ct==floor(3*BT)){
            with(objPBloodRed){
                instance_change_alpha(id,1,floor(BT),tween_linear);
            }
        }
        /*
        if(ct mod floor(sprite_get_width(sprTrain)/40)==1){
            var obj=instance_create_ext(-sprite_get_width(sprTrain),400-64,objPBullet,40,0,1,999);
            obj.killer=false;
            obj.sprite_index=sprTrain;
            obj.destroyOutside=true;
            obj.image_alpha=0.5;
        }
        */
        break;
    } 
    case marenolAvoidanceAttacks.PLATFORM_CONTRACTION:
    {   
        if(ct==1){
            with(objPlayer) instance_destroy();
            room_goto(rPAvoidance2);
        }
        if(ct==2){
            var obj=instance_create(0,0,objPrince_FadeIn);
            instance_fade_out(obj,floor(2*BT));
            
            var obj=instance_create(0,0,objPBgGradient);
            obj.colBottomLeft=c_red;
            obj.colBottomRight=c_red;
            obj.image_alpha=0;
            instance_change_alpha(obj,0.1,floor(BT),tween_sine_inout);
        }
        if(ct mod 4 == 0 &amp;&amp; ct&lt;floor(3*BT)){
            repeat(4){
                var ba=-90+random_range(-60,60);
                var br=708;
                var bx=400+br*dcos(ba);
                var by=0-br*dsin(ba);
                
                var obj=instance_create_ext(bx,by,objPBullet,2,ba+180,2,0);
                obj.sprite_index=sprPBigArrowhead;
                instance_scale(obj,0.2,50,tween_linear);
                obj.gravity=0.3;
                obj.gravity_direction=obj.direction;//+random_range(-10,10);
                obj.image_angle=obj.direction;
                
            }
        }
        
        if(ct==floor(3*BT)){
            with(objPBgGradient) instance_change_alpha(id,0.02,floor(3*BT),tween_sine_inout);
            with(objPBullet){
                gravity=0;
                friction=0.4;
                direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                image_angle=direction;
                image_xscale=2.0*image_xscale;
                image_yscale=2.0*image_yscale;
                
                instance_scale(id,0.5*image_xscale,15,tween_sine_out);
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.LONG_DROP:
    {
        if(ct==1){
            scrBlockBreak(1000000);
            with(objPBullet){
                friction=0;
                gravity_direction=-90;
                speed=1;
                gravity=0.05;
            }
        }
        if(ct&gt;BT){
            if(cameraSpeed&lt;9) cameraSpeed+=0.3;
            with(objPBullet){
                if(tag==0){
                    if(speed&gt;7) speed=7;
                    if(y&lt;view_yview[0]-64) instance_destroy()
                    image_angle=direction;
                }
            }    
            
        }
        if(ct&gt;BT&amp;&amp;ct mod floor(BT)==1){
            var bx=random(800);
            var by=view_yview[0]+608;
            var ba=90+random_range(-10,10);
            for(var i=0;i&lt;3;i++){
                var bs=2+i;
                var obj=instance_create_ext(bx,by,objPBullet,1,ba,1,9);
                obj.hspeed=bs*dcos(ba);
                obj.vspeed=9-bs*dsin(ba);
                //instance_scale(obj,1-0.1*i,10,tween_sine_out);
            }
        }
        
        if(ct==4*BT){
            with(objPBullet) gravity=0;
        }
        with(objPlayer){
            if(y&lt;view_yview[0]+128){
                y++;
                if(vspeed&lt;-2) vspeed+=1.5;
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.LONG_DROP_SPIRALS:
    {
        if(ct mod floor(BT)==1){
            for(var j=0;j&lt;2;j++){ //collectible bullets
                var bx=random(800);
                if(j==1){ //RNG control - one of the lines appears in a fixed sector
                    bx=clamp(((ct*8) mod 800)+random_range(-32,32),32,800-32);
                }
                var by=view_yview[0]+608+32;
                var ba=90+random_range(-10,10);
                for(var i=0;i&lt;3;i++){
                    var bs=4+i;
                    var obj=instance_create_ext(bx,by,objPBullet,1,ba,2,1);
                    obj.hspeed=bs*dcos(ba);
                    obj.vspeed=9-bs*dsin(ba);
                    obj.image_index=5;
                    obj.killer=false;
                    instance_scale(obj,1-0.1*i,10,tween_sine_out);
                }
            }
        }
        if(ct==1){
            with(objPBullet){
                if(tag==0) instance_scale(id,0.5*image_xscale,floor(8*BT),tween_linear);
            }
            for(var i=0;i&lt;=608;i+=16){ //cosmetic circle
                var cx=400;
                var cy=view_yview[0]+i;
                var obj=instance_create_ext(cx,cy,objP3DCircle,9,-90,400,0);
                obj.phaseSpeed=0;
                obj.rotationSpeed=0;
                obj.phaseOffset=90;
                obj.t=i/608;
                obj.dt=0.01;
                obj.image_alpha=0;
                
                instance_change_alpha(obj,0.5,50,tween_linear);
            }
            
            
            for(var i=0;i&lt;800;i+=24){ //first wave of collectible bullets
                for(var j=0;j&lt;72;j+=24){
                    var obj=instance_create_ext(i,view_yview[0]+608+j,objPBullet,2,90,3,1);
                    obj.image_index=5;
                    obj.killer=false;
                    instance_scale(obj,1,10,tween_sine_out);
                }
            }
        }
        if(ct==2){
            with(objP3DBullet){
                sprite_index=sprPCircleInverted;
                image_index=0;
                baseAlpha=0;
            }
        }   
        with(objPBullet){
             if(tag==1){ //collectible bullets logic
                if(place_meeting(x,y,objPlayer)){
                    if(!other.djumpRefreshed){
                        objPlayer.djump=true;
                        other.djumpRefreshed=false;
                    }
                    other.curtainY=min(other.curtainY+64,608);
                    vspeed=9;
                    instance_fade_out(id,30);
                    instance_scale(id,3,30,tween_linear);
                    tag=-1;
                }
             }else if(tag==3){ //bullets from the bottom
                if(y-view_yview[0]&lt;other.curtainY){
                    tag=4;
                    instance_fade_out(id,10)
                }
             }else if(tag==4){ //make the bullets not kill you as they fade out
                if(image_alpha&lt;0.5) killer=false;
             }
        }
        curtainY-=2;
        var obj=instance_create_ext(random(800),608+view_yview[0],objPBullet,0,-90,random_range(0.5,1),3);
        obj.sprite_index=sprPCircleInverted;
        obj.image_index=4;
        
        
        with(objPlayer){
            if(y&lt;view_yview[0]+128){
                y++;
                if(vspeed&lt;-2) vspeed+=1.5;
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.LONG_DROP_END:
    {  
        if(ct==1){
            with(objP3DCircle) {
                speed=0;
                instance_fade_out(id,30)
            }
            with(objPBullet){
                //if(tag==1||tag==-1){
                    vspeed=0;
                //}
                killer=false;
            }
            var obj=instance_create(0,0,objPShaderEffect);
            obj.intensity=0;
            instance_change_variable(obj,"intensity",1,50,tween_linear);
            cameraSpeed=0;
            
            var obj=instance_create(-200,objPlayer.y,objWater2);
            obj.image_xscale=1000/32;
            obj.image_yscale=600/32;
            obj.image_alpha=0;
            instance_change_alpha(obj,1,50,tween_linear);
            repeat(18){
                var obj=instance_create_ext(objPlayer.x,objPlayer.y,objPBullet,random_range(7,11),-90+random_range(-30,30),random_range(0.5,1),2);
                obj.killer=false; 
                obj.gravity=0.3;
                obj.gravity_direction=90;
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=4;    
            }
        }
        if(ct==floor(2.5*BT)){
            playerX=objPlayer.x;
            playerY=objPlayer.y;
            with(objPlayer){
                frozen=true;
                global.noDeath=true;
            }
        }
        if(ct==floor(2.5*BT)||ct==floor(3*BT)||ct==floor(3.5*BT)){
            var a=scrMakeCircleTagDist(playerX,playerY,random(360),32,-2,lerp(400,200,rlerp(floor(2.5*BT),floor(3.5*BT),ct)),objPBullet,-9);
            for(var i=0;i&lt;array_length_1d(a);i++){
                a[i].image_alpha=0;
                a[i].friction=0.2;
                a[i].sprite_index=sprPCircleInverted;
                a[i].image_index=4;
            }
        }
        with(objPBullet){
            if(vspeed&lt;0) killer=true;
            if(tag==-9&amp;&amp;image_alpha&lt;1) image_alpha+=0.1;
        }
        break;
    }
    case marenolAvoidanceAttacks.MOOD_BREAKER:
    {   
        if(ct==1){
            global.noDeath=false;
            with(objPlayer){
                instance_destroy();
                room_goto(rPAvoidance3);
            }
        }
        if(ct==2){
            //create the bg shader
            
            var bg=instance_create(0,0,objPShaderRectangle);
            bg.shader=shPlasma;
            bg.intensity=0;
            bg.image_alpha=0;
            instance_change_alpha(bg,0.2,100,tween_linear);
        }
        if(ct==2||ct==floor(BT)||ct==floor(1.5*BT)){
            view_screen_shake(8,5);
            var bx=400;
            var by=304-10*ct;
            var ba=point_direction(bx,by,objPlayer.x,objPlayer.y);
            var bn=18;
            if(ct==2) ba+=180/bn;
            var a=scrMakeCircleTag(bx,by,ba,bn,0.5,objPBullet,0);
            for(var i=0;i&lt;array_length_1d(a);i++){
                a[i].sprite_index=sprPCircleInverted;
                a[i].image_index=4;
            }
            with(objPBullet){
                if(tag==0) {
                    instance_move_to(id,x+128*dcos(direction),y-128*dsin(direction),8,tween_sine_out);
                    instance_scale(id,1.1*image_xscale,10,tween_sine_out);
                }
            }
        }
        if(ct==floor(2*BT)){
            with(objPBullet){
                if(tag==0){
                    killer=false;
                    instance_rotate_around_point(id,400,0,180,20,tween_sine_out);
                }
            }
        }
        if(ct==floor(3*BT)){
            with(objPBullet){
                if(tag==0){
                    hspeed=random_range(-1,1);
                    vspeed=random_range(0,-1);
                    gravity=0.8;
                    killer=false;
                }
            }
            var obj=instance_create(0,0,objPBgGradient);
            obj.colTopLeft=c_red;
            obj.colTopRight=c_red;
            obj.image_alpha=0;
            instance_change_alpha(obj,0.2,floor(BT),tween_return_sine_inout);
        }
        if(ct==floor(3.5*BT)){
            with(objPBullet){
                if(tag==0){
                    instance_shrink_out(id,30);
                }
            }
        }
        if(ct&lt;floor(3*BT)){
            with(objPBullet){
                scrCopy(objPTrail);
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.MOOD_BREAKER_LINE:
    {
        if(ct==1){
            with(objPBgGradient) instance_destroy();
        }
        if(ct==10){
            with(objPBullet) killer=false;
        }
        if(ct&lt;=10){ //vertical line formation
            var thresholdY=lerp(0,800,ct/10);
            while(addY&lt;=thresholdY){
                var by=304+64*side-96;
                var bx=addY+16;
                var obj=instance_create_ext(bx,by,objPBullet,0,0,3,side);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=4;
                side=-side;
                instance_move_to(obj,obj.x,304-96,10,tween_sine_out);
                instance_scale(obj,1,10,tween_sine_out);
                
                addY+=40;
            }
        }
        if(ct==floor(BT)||ct==floor(1.5*BT)){ //vertical line burst
            with(objPBullet){
                if(tag==other.side){
                    for(var i=-1;i&lt;2;i+=2){
                        var obj=instance_create_ext(x,y,objPBullet,32,-90*i+20*other.side,3,3*tag);
                        obj.sprite_index=sprPCircleInverted;
                        obj.image_index=4;
                        instance_scale(obj,1,10,tween_sine_out);
                        instance_change_variable(obj,"speed",obj.speed/5,4,tween_exp_in);
                        obj.gravity=0.1;
                        obj.gravity_direction=obj.direction;
                    }   
                    instance_destroy();    
                }
            }
            side=-side;
        }
        if(ct&gt;=floor(BT)&amp;&amp;ct&lt;floor(1.7*BT)||ct&gt;=floor(3*BT)&amp;&amp;ct&lt;floor(4*BT)){
            view_xview[0]=random_range(-4,4);
            view_yview[0]=random_range(-4,4);
            
        }
        if(ct==floor(1.7*BT)){
            view_xview[0]=0;
            view_yview[0]=0;
            
        }
        with(objPBullet){
            if(tag==3||tag==-3){
                scrCopy(objPTrail);
            }
        }
        if(ct==floor(2*BT)||ct==floor(2.5*BT)){ //fast laser formation
            var numLines=5;
            for(var i=0;i&lt;numLines;i++){
                var bxstart=800/numLines*i+random(800/numLines);
                if(ct==floor(2*BT)) {
                    pointsX[i]=800/numLines*i+random(800/numLines); //start and end X
                    if(abs(pointsX[i]-objPlayer.x)&lt;64){
                        pointsX[i]=objPlayer.x + 64 * esign(pointsX[i]-objPlayer.x,1);
                        show_debug_message(pointsX[i]);
                    }
                }
                var bystart=-32;
                var byend=608;
                
                var ba=point_direction(bxstart,bystart,pointsX[i],byend);
                var br=24;
                for(var j=0;j&lt;30;j++){
                    var bx=bxstart+br*j*dcos(ba);
                    var by=bystart-br*j*dsin(ba);
                    if(j&lt;6){
                        var obj=instance_create_ext(bx,by,objPBullet,0.1,ba,2*(1-0.05*j),4);
                    }else{
                        var obj=instance_create_ext(bx,by,objPBullet,0.1,ba,0.4,4);
                        obj.image_alpha=0.8;
                        instance_fade_out(obj,30);
                        obj.tag=-4
                    }
                    
                    obj.sprite_index=sprPCircleInverted;
                    obj.image_index=4;
                    obj.killer=false;
                    
                    if(by&gt;608) break;
                }
            }
            side=-side;
        }
        if(ct==floor(3*BT)){ //fast lasers shoot out
            with(objPBullet){
                if(tag==4){
                    speed=96;
                    scale=0.08;
                }
            }
            var obj=instance_create(0,0,objPBgGradient);
            obj.colTopLeft=c_red;
            obj.colTopRight=c_red;
            obj.image_alpha=0;
            instance_change_alpha(obj,0.2,floor(BT),tween_return_sine_inout);
            side=sign(objPlayer.x-400);
        }
        if(ct==floor(3.4*BT)){
            with(objPBullet){
                if(tag==4){
                    direction+=180;
                    scale=0.08;
                }
            }
        }
        if(ct&gt;=floor(3*BT)){
            with(objPBullet){
                if(tag==4){
                    if(ct%2==0&amp;&amp;!irandom(3)){
                        var obj=scrCopy(objPBullet);
                        obj.tag=10;
                        obj.gravity=0.2;
                        obj.speed=random(1);
                        obj.direction=random(360);
                        instance_shrink_out(obj,50);
                        obj.gravity_direction=90-90*other.side;
                        obj.destroyOutside=true;
                    }
                    scrCopy(objPTrail);
                }
                if(vspeed&lt;0&amp;&amp;y&lt;0) instance_destroy();
                
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.MOOD_BREAKER_CURTAIN:
    {
        var fact=0.5;
        if(ct==1){
            with(objPBgGradient) instance_destroy();
            addY=32*fact;
            
        }
        if(ct==floor(BT)){
            with(objPBullet) if(tag==10) killer=false;
        }
        if(ct==1||ct==floor(BT)||ct==floor(1.5*BT)||ct==floor(2*BT)||ct==floor(2.5*BT)){
            side=1;
            for(var i=0;i&lt;800;i+=32){
                var obj=instance_create_ext(i,addY,objPBullet,0.1,90,2,5*side);
                instance_scale(obj,1,10,tween_sine_out);
                
                var obj0=instance_create_ext(i,608-addY,objPBullet,0.1,90,2,9*side);
                obj0.image_index=0;
                obj0.image_alpha=0.5;
                obj0.killer=false;
                instance_scale(obj0,1,10,tween_sine_out);
                
                side=-side;
                
                
            }
            addY+=64*fact;
            if(ct==floor(2.5*BT)){
                
            }
        }
        if(ct==floor(3*BT)){
            side=choose(-1,1);
            with(objPBullet){
                if(tag==5*other.side){
                    vspeed=-8;
                    gravity=0.8;
                    instance_shrink_out(id,30);
                }
                if(abs(tag)==9){
                    gravity=0.4;
                    hspeed=random_range(-2,2);
                    destroyOutside=true;
                    killer=true;
                    image_alpha=1;
                }
                
            }
            
            addY-=64*fact;
        }
        if(ct&gt;=floor(4*BT)&amp;&amp;ct&lt;=floor(7*BT)){ // Disperse the lines
            if(ct%floor(BT)==1){
                view_screen_shake(4,5);
                addY-=80*fact;
                var ba=random(360);
                with(objPBullet){
                    if(y&gt;=other.addY&amp;&amp;abs(tag)==5){
                        tag=6;
                        ba = (ba+10) mod 180
                        direction=-ba;
                        script_execute_delayed(instance_change_variable,floor(x/80),id,"speed",16,1);
                        script_execute_delayed(instance_change_variable,floor(x/80)+2,id,"speed",5+(256-other.addY)/32*fact,1);
                        
                        script_execute_delayed(instance_scale,floor(x/80),id,3,1,tween_sine_out)
                        script_execute_delayed(instance_scale,floor(x/80)+2,id,1,floor(BT),tween_sine_out);
                    }
                }
            }
        }
        if(ct==floor(7*BT)+1){
            global.infJump=true; //Infinite jump
            instance_create(0,0,objPColourInvert);
            with(objPBullet){
                if(tag==6){
                    with(oDelayedExecutionCommand) if(scr==instance_scale) instance_destroy();
                    instance_change_variable(id,"image_xscale",4,10,tween_sine_out);
                    instance_change_variable(id,"image_yscale",0.5,10,tween_sine_out);
                    image_angle=direction;
                }
            }
            view_screen_shake(8,floor(BT));
        }
        
        break;
    }
    case marenolAvoidanceAttacks.MOOD_BREAKER_SHAPES:
    {
        if(ct==1){
            with(objPShaderRectangle){
                y=-(800-608)/2;
                image_yscale=800/608;
                shader=shSqrtWaveRadial;
                intensity=0.5;
                image_alpha=0.3;
                image_blend=c_red;
            }
            side=esign(objPlayer.x-400,1);
            with(objBlock){
                if(x&gt;=0&amp;&amp;x&lt;800){
                    instance_create(x+16,y+16,objPrince_BrokenTile);
                    instance_destroy();
                }
            }
            tile_layer_hide(1000000);
            with(objPColourInvert) instance_destroy();
            var obj=instance_create(400,304,objP3DCircle);
            obj.image_xscale=100;
            obj.image_yscale=100;
            obj.z=-100;
            obj.dt=1;
            obj.image_alpha=0;
            obj.numCherries=32;
            instance_change_alpha(obj,1,floor(BT),tween_sine_out);
            instance_change_variable(obj,"dt",0.01,floor(BT),tween_sine_out);
            obj.phaseSpeed=0;
            obj.rotationSpeed=0;
        }
        
        if(ct mod floor(BT)==1&amp;&amp;(ct&lt;floor(7*BT)||ct&gt;(floor(8*BT)-1)&amp;&amp;ct&lt;floor(14*BT))){ 
            var baa=random(360);
            for(var j=-1;j&lt;2;j+=2){
                var ba=shape_angle+5*ct+90*j;
                var ind;
                var extraProjectiles=(ct&gt;(floor(8*BT)-1));
                if(shape_index==0){ //shapes
                    var a=scrMakeCircleTagDist(400,304,baa+90*j,8+4*extraProjectiles,2.5,0,objPBullet,6);
                    ind=0;
                }else{
                    var a=scrMakeShapesDist(400,304,baa+90*j,shape_index+2,5-shape_index+extraProjectiles,2,0,objPBullet,6);
                    ind=shape_index*2+1;
                }
                
                for(var i=0;i&lt;array_length_1d(a);i++){
                    if(ct&lt;floor(7*BT)){
                        a[i].hspeed+=8*dcos(ba);
                        a[i].vspeed-=8*dsin(ba);
                        a[i].gravity=0.2;
                        a[i].gravity_direction=ba+180+10;
                        
                    }else{
                        a[i].speed*=5;
                        instance_change_variable(a[i],"speed",a[i].speed/3,50,tween_sine_out);
                    }
                    a[i].image_index=ind;
                    instance_shrink_out(a[i],200);
                }
            }
            with(objP3DCircle){
                if(tag==0) image_index=ind;
                baseScale=3;
                instance_change_variable(id,"baseScale",1,floor(BT),tween_sine_out);
            }
            with(objP3DBullet){
                if(tag==0) image_index=ind;
            }
            shape_index++;
            if(shape_index&gt;2) shape_index=0;
            
            //center circles
            var ca= 90-(45+0.5*ct)*side;
            with(objP3DBullet){
                var obj0=instance_create_ext(x,y,objPBullet,6,point_direction(400,304,x,y),2,8);
                obj0.sprite_index=sprPCircleInverted;
                obj0.image_index=image_index;
                instance_scale(obj0,1,15,tween_sine_out);
                obj0.destroyOutside=true;
                
                if(abs(angle_difference(point_direction(400,304,x,y),ca))&lt;90){
                    instance_fade_out(obj0,5);
                    obj0.killer=false;
                    obj0.tag=8;
                }
            }
            view_screen_shake(4,8);
        }
        if(ct==floor(7*BT)+2){
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStaticInvert;
                intensity=0.01;
            }
            with(objPBullet){
                if(tag==6){
                    if(x&lt;0||x&gt;800||y&lt;0||y&gt;608) instance_destroy();
                    speed=0;
                    killer=false;
                    instance_move_to(id,400,304,floor(BT),tween_sine_out);
                    instance_fade_out(id,floor(BT));
                }
            }
            with(objPShaderRectangle){
                image_blend=c_blue
            }
        }
        else if(ct==floor(8*BT)){
            with(objPShaderEffect) instance_destroy();
        }
        if(ct==floor(14*BT)){
            with(objPBullet){
                if(tag==6||tag==8){
                    repeat(5){
                        with(scrCopy(objPBullet)){
                            tag=7;
                            speed=random(1);
                            direction=random(360);
                            var factor=random(1);
                            image_xscale*=2;
                            image_yscale*=2;
                            
                            instance_scale(id,image_xscale*factor,floor(BT),tween_linear)
                            gravity=0;
                        }
                    }
                }
                instance_destroy();
            }
            with(oRdrShrinkCommand) instance_destroy();
            instance_create(0,0,objPColourInvert);
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStaticInvert;
                intensity=0;
            }
        }
        if(ct==floor(15*BT)+1){
            with(objPShaderEffect) intensity=0.25;
            global.noDeath=true;
        }
        break;
    }
    case marenolAvoidanceAttacks.SAW_BOX:
    {
        if(ct==1){
            global.noDeath=false;
            with(objPlayer) instance_destroy();
            room_goto(rPAvoidance4);
        }   
        if(ct==2){ //green rings
            
            for(var i=-1;i&lt;2;i++){
                var bx=400+200*i;
                var by=608*(i==0);
                
                for(var j=0;j&lt;2;j++){
                    for(var k=0;k&lt;3;k++){
                        var obj=instance_create(bx,by,objP3DCircle);
                        obj.numCherries=4+4*(k==0);
                        obj.baseScale=0.5;
                        obj.dt=0.001;
                        obj.killer=true;
                        obj.z=-100;
                        obj.image_xscale=0;
                        obj.gravity=0.03;
                        obj.speed=5;
                        obj.phaseSpeed=0;
                        obj.t+=1/24*k+1/8*j;
                        if(i==0){
                            obj.gravity_direction=-90;
                            obj.direction=90;
                        }else{
                            obj.gravity_direction=90;
                            obj.direction=-90;
                        }
                        if(j==1||k!=0) {
                            instance_fade_out(obj,floor(5*BT));
                            obj.killer=false;
                        }
                        instance_scale(obj,200+100*j,floor(8*BT),tween_sine_inout);
                        
                    }
                }
            }
        }
        if(ct==floor(4.0*BT)){
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.006;
            }
        }
        
        if(ct==floor(4.5*BT)){
            with(objPShaderEffect){
                instance_destroy();
            }
            var obj=instance_create(0,0,objPShaderRectangle);
            obj.shader=shSqrtWaveVertical;
            obj.image_blend=c_green;
            
            instance_change_alpha(obj,0.8,30,tween_linear);
            instance_change_variable(obj,"intensity",0.7,30,tween_linear);
            with(instance_create(0,0,objPShaderEffect)){
                shader=shChromaticAberration;
                intensity=0.006;
            }
        }
        if(ct mod floor(0.5*BT) == 1){
            repeat(irandom_range(1,2)){
                var obj=instance_create_ext(random(800),0,objPBullet,random_range(1,3),-random(180),1.5,0);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=4;
                //obj.killer=false;
                var obj0=instance_create_ext(random(800),608,objPBullet,random_range(1,3),random(180),1.5,0);
                obj0.sprite_index=sprPCircleInverted;
                obj0.image_index=4;   
                //obj0.killer=false;   
                instance_scale(obj,random_range(0.4,0.6),30,tween_sine_out);
                instance_scale(obj0,random_range(0.4,0.6),30,tween_sine_out);
                             
            }
        }
        if(ct==floor(8*BT)+3){
            with(objP3DCircle){
                instance_scale(id,0,floor(8*BT),tween_sine_inout);
            }
        }
        if(ct&lt;floor(13*BT)){
            with(objPShaderEffect) intensity=random(0.005);
        }
        else{
            with(objPShaderEffect) {
                intensity=random(0.005)*rlerp(floor(16*BT),floor(13*BT),ct)
                //instance_change_variable(id,"intensity",0,50,tween_sine_out);
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.SAW_BOX_SETUP:
    {
        if(ct==1){ 
            with(objPShaderEffect) instance_destroy();
            with(objPShaderRectangle) instance_fade_out(id,30);
        
            //setup the shader effect
            var obj=instance_create(0,0,objPShaderRectangle);
            obj.shader=shSqrtWaveVertical;
            obj.image_blend=c_red;
            
            instance_change_alpha(obj,1,30,tween_linear);
            instance_change_variable(obj,"intensity",0.7,30,tween_linear);
            
            
            with(objPBullet){
                if(y&gt;640||x&gt;800+32||x&lt;-32||sprite_index==sprPCircle) instance_destroy();
                else if(tag==0){
                    instance_change_variable(id,"image_xscale",2.0*image_xscale,30,tween_sine_inout);
                    instance_change_variable(id,"image_yscale",0.5*image_yscale,30,tween_sine_inout);
                    
                }
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.006;
            }
            
            //Setup the aimed line
            var bxstart=clamp(objPlayer.x-random(200)*(objPlayer.x-400)/400,0,800);
            //if(ct==floor(2*BT)) pointsX[i]=800/numLines*i+random(800/numLines); //start and end X
            var bystart=-32;
            var byend=608;
            var ba=point_direction(bxstart,bystart,objPlayer.x,objPlayer.y);
            var br=24;
            var bo=8;
            for(var i=0;i&lt;64;i++){
                
                var bx=bxstart+br*i*dcos(ba);
                var by=bystart-br*i*dsin(ba);
                for(var j=-1;j&lt;2;j++){
                    var obj=instance_create_ext(bx+bo*j*dcos(ba+90),by-bo*j*dsin(ba+90),objPBullet,0.2*(j!=0),ba-90*j,0.5+0.5*(j==0),4);
                    obj.sprite_index=sprPCircleInverted;
                    obj.image_index=4;
                    obj.killer=false;
                    obj.image_alpha=0;
                }
                if(by&gt;608) break;
            }
        }
        
        with(objPBullet){
            if(tag==4) image_alpha+=0.1;
            else if(tag==0){
                image_angle=direction;
                if(vspeed&lt;3) vspeed+=0.05; //gravity
                
                if(y&gt;640) y-=(608+64)    //screenwrap
                if(x&gt;800+32&amp;&amp;hspeed&gt;0) x-=(800+64);
                if(x&lt;-32&amp;&amp;hspeed&lt;0) x+=(800+64);
            }
        }
        if(ct==floor(7.0*BT)){
            with(objPShaderEffect) instance_change_variable(id,"intensity",3*intensity,floor(BT),tween_linear);
        }
        break;
    }
    case marenolAvoidanceAttacks.SAW_BOX_TRIGGER:
    {
        if(ct==1){
            with(objPShaderEffect) instance_destroy();
            view_screen_shake(16,floor(4*BT));
            var obj=instance_create(0,0,objPBloodRed);
            obj.shader=shBloodRed;
            obj.intensity=0;
            with(objPBullet){
                if(tag==0){
                    killer=false;
                    image_alpha=0.75;
                    destroyOutside=true;
                }
            }
        }
        if(ct&lt;floor(4*BT)){
            var cy=608*rlerp(0,floor(3*BT),ct);
            with(objPBullet){
                if(tag==4&amp;&amp;y&lt;cy){
                    repeat(3){
                        with(scrCopy(objPBullet)){
                            tag=5;
                            killer=true;
                            speed=random_range(4,10);
                            direction=random(360);
                            destroyOutside=true;
                            instance_scale(id,image_xscale,15,tween_sine_out);
                            image_xscale=5;
                            image_yscale=5;
                        }
                    }
                    instance_destroy();
                }
                else if(tag==5){
                    if(speed&gt;5) speed-=0.3;
                }
            }
        }
        if(ct==floor(4*BT)){
            with(objPBullet){
                gravity_direction=direction;
                gravity=random_range(0.1,0.15);
                speed=0;
                killer=false;
            }
            with(objPBloodRed) instance_destroy();
            var obj=instance_create(0,0,objPrince_FadeIn);
            obj.image_alpha=0;
            instance_change_alpha(obj,1,floor(4*BT),tween_linear);
        }
        break;
    }
    case marenolAvoidanceAttacks.WATER:
    {
        if(ct==1){
            with(objPlayer) instance_destroy();
            room_goto(rPAvoidance5);
        }
        if(ct==2){
            var obj=instance_create(0,0,objPrince_FadeIn);
            instance_fade_out(obj,floor(2*BT));
            with(objWater2) instance_change_alpha(id,0.5,floor(2*BT),tween_linear);
        }
        if(ct==2||ct==100||ct==200){
            //spawn the large background bubble
            for(var i=0;i&lt;3;i++){
                var bs=random_range(1,3);
                if(i&gt;0) bs=random_range(0.5,0.8);
                var bubble=instance_create(random(800),608+128*bs+(i&gt;0)*random_range(-32,32),objPCosmetic);
                bubble.killer=false;
                bubble.sprite_index=sprBubble;
                bubble.image_alpha=0.1;
                bubble.image_xscale=bs;
                bubble.image_yscale=bs;
                bubble.vspeed=-bubble.image_xscale;
                bubble.tag=888;
            }
        }   
        if(ct mod floor(BT)==1&amp;&amp;ct&lt;floor(15*BT)){
            var a=scrMakeCircleTagDist(random_range(200,600),random_range(100,508),random(360),8,2,0,objPBullet,1);
            for(var i=0;i&lt;array_length_1d(a);i++){
                a[i].image_index=8;
                a[i].image_alpha=0;
                a[i].killer=false;
                instance_change_alpha(a[i],1,50,tween_linear);
            }
            
        }
        if(ct==floor(2*BT)+2){
            var obj=instance_create(0,0,objPShaderChain);
            obj.shader[0]=shDoubleWave;
            obj.shader[1]=shWormBlood;
            obj.intensity[0]=0.0;
            obj.intensity[1]=0.0;
            instance_change_variable_array(obj,"intensity",0,0.01,floor(4*BT),tween_linear);
            instance_change_variable_array(obj,"intensity",1,1,floor(4*BT),tween_linear);
        }
        if(ct&lt;floor(15*BT)){
            with(objPBullet){
            
                direction+=1;
                if(image_alpha&gt;0.95) killer=true;
            }
        }
        with(objPCosmetic){
            if(tag==888){ //Bubble behaviour
                x+=random_range(-0.5,0.5);
            }
        }
        if(ct==floor(16.5*BT)){ //colour invert
            with(objPShaderChain) instance_destroy();
            with(objPBullet) {
                sprite_index=sprPCircleInverted
                image_index=4;
                speed=0;
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.003;
            }
            with(objPTrail) image_blend=c_red;
            with(objPUnderwater) image_blend=c_red;
            with(objWater2) visible=false;
            with(objPCosmetic) instance_destroy();
        }
        break;
    }
    case marenolAvoidanceAttacks.WATER_FLOWERS:
    {
        if(ct==1){
            with(objPTrail) image_blend=c_white;
            with(objPUnderwater) image_blend=c_white;
            with(objPBullet) {
                sprite_index=sprPCircle;
                image_index=8;
                gravity_direction=point_direction(400,304,x,y);
                gravity=0.0005*point_distance(400,304,x,y);
                instance_scale(id,1-point_distance(400,304,x,y)/800,30,tween_sine_out);
            }
            with(objWater2) {
                visible=true;
                image_blend=merge_colour(c_white,c_red,0.5);
            }
            with(objPShaderEffect) instance_destroy();
            //var obj=instance_create(0,0,objPShaderEffect);
            //obj.shader=shWormBlood;
            var obj=instance_create(0,0,objPShaderChain);
            obj.shader[0]=shDoubleWave;
            obj.shader[1]=shWormBlood;
            obj.intensity[0]=0.01;
            obj.intensity[1]=1.0;
        }
        if(ct==2||ct==100||ct==200){
            //spawn the large background bubbles
            for(var i=0;i&lt;3;i++){
                var bs=random_range(1,3);
                if(i&gt;0) bs=random_range(0.2,0.5);
                var bubble=instance_create(random(800),608+128*bs+(i&gt;0)*random_range(-32,32),objPCosmetic);
                bubble.killer=false;
                bubble.sprite_index=sprBubble;
                bubble.image_alpha=0.08;
                bubble.image_xscale=bs;
                bubble.image_yscale=bs;
                bubble.vspeed=-bubble.image_xscale;
                bubble.tag=888;
                bubble.image_blend=c_red;
            }
        } 
        with(objPCosmetic){
            if(tag==888){ //Bubble behaviour
                x+=random_range(-0.5,0.5);
            }
        }
        if(ct mod floor(4*BT)==floor(2*BT)){
            with(objAvoidanceFlower){
                if(tag==0){ //burst into the red flower
                    var obj0=instance_create(x,y,objAvoidanceFlower);
                    obj0.killer=true;
                    obj0.tag=1;
                    obj0.altFlower=true;
                    obj0.sprite_index=sprPCircleInverted;
                    obj0.image_index=4;
                    instance_destroy();
                }
            }
            with(objPShaderChain){
                intensity[0]=0.06;
                instance_change_variable_array(id,"intensity",0,0.01,floor(2*BT),tween_sine_out);
            }
            repeat(4){
                var obj=instance_create(objPlayer.x+random_range(-64,64),objPlayer.y+random_range(-64,64),objAvoidanceFlower);
                obj.image_index=8;
                instance_change_alpha(obj,0,50,tween_linear);
            }
            
            
            
        }
        if(ct mod floor(4*BT)==1){
            var a=instance_create(400,304,objP3DCircle);
            a.killer=true;
            a.phaseSpeed=0;
            a.z=-100;
            a.dt=random_range(-0.001,0.001);
            a.image_xscale=800;
            a.image_yscale=800;
            a.numCherries=12;
            instance_shrink_out(a,300);
        }
        with(objP3DBullet){
            image_index=0;
        }
        
        break;
    }
    case marenolAvoidanceAttacks.WATER_FLOWERS_CONTRACTION:
    {
        if(ct==1){
            with(objPShaderChain){
                instance_change_variable_array(id,"intensity",0,0.0,floor(2*BT),tween_sine_out);
                instance_change_variable_array(id,"intensity",1,0.0,floor(2*BT),tween_sine_out);
            }
            //with(objPShaderEffect) instance_change_variable(id,"intensity",0,floor(4*BT),tween_linear);
            with(objPBullet){
                if(image_alpha&gt;0.5)
                with(scrCopy(objPBullet)){
                    speed=random_range(0,2);
                    direction=random(360);
                }
            }
            with(objAvoidanceFlower) instance_destroy();
            with(objP3DCircle) instance_destroy();
            with(objWater2) instance_change_alpha(id,0,floor(4*BT));
        }
        if(ct==floor(4*BT)){
            with(objPShaderChain) instance_destroy();
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.012;
            }
        }
        if(ct==floor(7*BT)){
            with(objPShaderEffect) instance_destroy();
            with(instance_create(0,0,objPrince_FadeIn)){
                image_alpha=0.12;
                instance_change_alpha(id,1,floor(BT),tween_linear);
                
            }
            global.noDeath=true;
        }
        break;
    }
    case marenolAvoidanceAttacks.EYES:
    {
        if(ct==1){
            global.noDeath=false;
            with(objPlayer) instance_destroy();
            room_goto(rPAvoidance6);
        
        }
        if(ct==2){ //horizontal indicators
            with(instance_create(0,0,objPBgScreen)){
                image_blend=c_black;
                image_alpha=1;
                depth=-depth;
                instance_fade_out(id,floor(0.5*BT));
            }
            for(var i=0;i&lt;20;i++){
                var cx=random(800);
                var cy=random(608);
                var cscale=random_range(0.5,1.5);
                var obj=instance_create_ext(cx,cy,objPBullet,2*cscale,-90,cscale,0);
                obj.killer=false;
                instance_change_alpha(obj,0,floor(2*BT)-3,tween_sine_out);
                instance_change_variable(obj,"speed",0,floor(2*BT),tween_linear);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=2;
                with(obj) if(place_meeting(x,y,objBlock)) y-=48;
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shWave;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,floor(0.75*BT),tween_sine_out);
            }
        }
        if(ct==floor(2*BT)){ //horizontal eyes
            with(objPShaderEffect) instance_destroy();
            if(!irandom(10)){ //giygas easter egg
                with(instance_create(400,304,objPBullet)){
                    image_alpha=0;
                    image_blend=c_red;
                    killer=false;
                    sprite_index=sprGiygas;
                    speed=0.5;
                    tag=-999;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }else{
                with(instance_create(0,0,objPBgScreen)){
                    image_alpha=0;
                    image_blend=c_red;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }
            
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.012;
            }
            with(objPBullet){
                if(tag==0){
                    killer=true;
                    image_alpha=1.0;
                    speed=0;
                    for(var i=-6;i&lt;7;i++){
                        for(var j=-1;j&lt;2;j+=2){
                            var cx=x+8*image_xscale*i;
                            var obj=instance_create_ext(cx,y,objPBullet,speed,direction,image_xscale*0.5,1);
                            
                            var cy=y+16*image_xscale*j*dcos(15*i);
                            obj.sprite_index=sprPCircleInverted;
                            obj.image_index=2;
                            instance_move_to(obj,cx,cy,floor(2*BT),tween_elastic_out);
                        }
                    }
                    instance_scale(id,image_xscale,floor(2*BT),tween_elastic_out);
                    sprite_index=sprPCircle;
                    image_index=0;
                    
                }
            }
        }
        if(ct==floor(3*BT)){
            with(objPBullet){
                if(tag==1){
                    killer=false;   
                    instance_move_to(id,xstart,ystart,floor(BT),tween_linear);
                    instance_fade_out(id,floor(BT));
                }
                else if(tag==0){
                    killer=false; 
                    instance_fade_out(id,floor(0.5*BT));
                }else if(tag==-999){
                    instance_change_alpha(id,0,floor(BT),tween_linear);
                }
            }
            with(objPShaderEffect){
                instance_change_variable(id,"intensity",0,floor(BT),tween_linear);
            }
            with(objPBgScreen){
                instance_change_alpha(id,0,floor(BT),tween_linear);
            }
        }
        if(ct==floor(4*BT)){ //vertical indicators
            with(objPBgScreen){
                instance_destroy();
            }
            with(objPShaderEffect){
                instance_destroy();
            }
            with(objPBullet) if(tag==-999) instance_destroy();
            /*
            with(objPBullet){
                if(tag==0){
                    image_alpha=1.0;
                    killer=false;
                    sprite_index=sprPCircleInverted;
                    image_index=2;
                    speed=2*image_xscale;
                    direction=choose(0,180);
                    instance_change_alpha(id,0,floor(2*BT)-3,tween_sine_out);
                }
                else if(tag==1) instance_destroy();
            }
            */
            for(var i=0;i&lt;20;i++){
                var cx=random(800);
                var cy=random(608);
                var cscale=random_range(0.5,1.5);
                var obj=instance_create_ext(cx,cy,objPBullet,2*cscale,choose(0,180),cscale,0);
                obj.killer=false;
                instance_change_alpha(obj,0,floor(2*BT)-3,tween_sine_out);
                instance_change_variable(obj,"speed",0,floor(2*BT),tween_linear);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=2;
                with(obj) if(place_meeting(x,y,objBlock)) y-=48;
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shWave;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,floor(0.75*BT),tween_sine_out);
            }
        }
        if(ct==floor(6*BT)){ //vertical eyes
            with(objPShaderEffect){
                instance_destroy();
            }
            if(!irandom(10)){ //giygas easter egg
                with(instance_create(400,304,objPBullet)){
                    image_alpha=0;
                    image_blend=c_red;
                    killer=false;
                    sprite_index=sprGiygas;
                    speed=0.5;
                    tag=-999;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }else{
                with(instance_create(0,0,objPBgScreen)){
                    image_alpha=0;
                    image_blend=c_red;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.012;
            }
            with(objPBullet){
                if(tag==0){
                    killer=true;
                    image_alpha=1.0;
                    speed=0;
                    for(var i=-6;i&lt;7;i++){
                        for(var j=-1;j&lt;2;j+=2){
                            var cx=x+16*image_xscale*j*dcos(15*i);
                            var cy=y+8*image_xscale*i;
                            var obj=instance_create_ext(x,cy,objPBullet,speed,direction,image_xscale*0.5,1);
                            obj.sprite_index=sprPCircleInverted;
                            obj.image_index=2;
                            instance_move_to(obj,cx,cy,floor(2*BT),tween_elastic_out);
                        }
                    }
                    instance_scale(id,image_xscale,floor(2*BT),tween_elastic_out);
                    sprite_index=sprPCircle;
                    image_index=0;
                    
                }
            }
        }
        if(ct==floor(7*BT)){
            with(objPBullet){
                if(tag==1){
                    killer=false;   
                    instance_move_to(id,xstart,ystart,floor(BT),tween_linear);
                    instance_fade_out(id,floor(BT));
                }
                else if(tag==0){
                    killer=false; 
                    instance_fade_out(id,floor(0.5*BT));
                }else if(tag==-999){
                    instance_change_alpha(id,0,floor(BT),tween_linear);
                }
            }
            with(objPShaderEffect){
                instance_change_variable(id,"intensity",0,floor(BT),tween_linear);
            }
            with(objPBgScreen){
                instance_change_alpha(id,0,floor(BT),tween_linear);
            }
            
            
        }
        if(ct==floor(8*BT)){ //radial indicators
            with(objPShaderEffect){
                instance_destroy();
            }
            with(objPBgScreen){
                instance_destroy();
            }
            with(objPBullet) if(tag==-999) instance_destroy();
            for(var i=0;i&lt;20;i++){
                var cx=400;
                var cy=304;
                var cr=random_range(32,400);
                var cscale=cr/300;
                var obj=instance_create_ext(cx,cy,objP3DCircle,0,0,cr,0);
                
                obj.killer=false;
                obj.dt=choose(-1,1)*0.0015*cscale;
                obj.t=random(1);
                obj.z=-200;
                obj.phaseSpeed=0;
                obj.baseScale=cscale;
                obj.rotationSpeed=0;
                with(obj){
                    event_perform(ev_step,ev_step_normal);
                    for(var j=0;j&lt;numCherries;j++){
                        cherries[j].sprite_index=sprPCircleInverted;
                        cherries[j].image_index=2;
                        with(cherries[j]){
                            if(place_meeting(x,y,objPEyeFadeMarker)) instance_destroy();
                        }
                    }
                }
                instance_change_alpha(obj,0,floor(2*BT)-3,tween_sine_out);
                instance_change_variable(obj,"dt",0,floor(2*BT),tween_linear);
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shWave;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,floor(0.75*BT),tween_sine_out);
            }
        }
        if(ct==floor(10*BT)){ //radial eyes
            with(objPShaderEffect){
                instance_destroy();
            }
            if(!irandom(10)){ //giygas easter egg
                with(instance_create(400,304,objPBullet)){
                    image_alpha=0;
                    image_blend=c_red;
                    killer=false;
                    sprite_index=sprGiygas;
                    speed=0.5;
                    tag=-999;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }else{
                with(instance_create(0,0,objPBgScreen)){
                    image_alpha=0;
                    image_blend=c_red;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.012;
            }
            with(objP3DCircle){
                image_alpha=1;
                dt=0;
            }
            with(objPBullet){
                if(tag==0){
                    var ca=point_direction(400,304,x,y);
                    killer=true;
                    image_alpha=1.0;
                    speed=0;
                    for(var i=-6;i&lt;7;i++){
                        for(var j=-1;j&lt;2;j+=2){
                            var cy=16*image_xscale*j*dcos(15*i);
                            var cx=8*image_xscale*i;
                            var cy0=0;
                            var cxx=x+cx*dcos(ca)-cy*dsin(ca);
                            var cyy=y-cx*dsin(ca)-cy*dcos(ca);
                            var cxx0=x+cx*dcos(ca);
                            var cyy0=y-cx*dsin(ca);
                            var obj=instance_create_ext(cxx0,cyy0,objPBullet,speed,direction,image_xscale*0.5,1);
                            obj.sprite_index=sprPCircleInverted;
                            obj.image_index=2;
                            instance_move_to(obj,cxx,cyy,floor(2*BT),tween_elastic_out);
                        }
                    }
                    instance_scale(id,image_xscale,floor(2*BT),tween_elastic_out);
                    sprite_index=sprPCircle;
                    image_index=0;
                    
                }
            }
        }
        if(ct==floor(11*BT)){
            with(objPBullet){
                if(tag==1){
                    killer=false;   
                    instance_move_to(id,xstart,ystart,floor(BT),tween_linear);
                    instance_fade_out(id,floor(BT));
                }else if(tag==-999){
                    instance_change_alpha(id,0,floor(BT),tween_linear);
                }
            }
            with(objP3DCircle){
                killer=false;
                instance_fade_out(id,floor(0.5*BT));
            }
            with(objPShaderEffect){
                instance_change_variable(id,"intensity",0,floor(BT),tween_linear);
            }
            with(objPBgScreen){
                instance_change_alpha(id,0,floor(BT),tween_linear);
            }
        }
        if(ct==floor(12*BT)){ //Big center indicator
            with(objPShaderEffect) instance_destroy();
            with(objPBgScreen){
                instance_destroy();
            }
            with(objPBullet) if(tag==-999) instance_destroy();
            for(var i=0;i&lt;1;i++){
                var cx=400;
                var cy=304;
                var cscale=5;
                var obj=instance_create_ext(cx,cy,objPBullet,0,-90,cscale,3);
                obj.killer=false;
                instance_change_alpha(obj,0,floor(2*BT)-3,tween_sine_out);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=2;
            }
            
            for(var i=0;i&lt;20;i++){
                var cx=400;
                var cy=304;
                var cr=random_range(128,500);
                var cscale=1-cr/600;
                var obj=instance_create_ext(cx,cy,objP3DCircle,0,0,cr,0);
                
                obj.killer=false;
                obj.dt=0;
                obj.t=random(1);
                obj.z=-200;
                obj.phaseSpeed=0;
                obj.baseScale=cscale;
                obj.rotationSpeed=0;
                with(obj){
                    event_perform(ev_step,ev_step_normal);
                    for(var j=0;j&lt;numCherries;j++){
                        cherries[j].sprite_index=sprPCircleInverted;
                        cherries[j].image_index=2;
                        with(cherries[j]){
                            if(place_meeting(x,y,objPEyeFadeMarker)) instance_destroy();
                        }
                    }
                    
                }
                instance_change_alpha(obj,0,floor(2*BT)-3,tween_sine_out);
                instance_scale(obj,0.9*obj.image_xscale,floor(2*BT),tween_linear);
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shWave;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,floor(0.75*BT),tween_sine_out);
            }
        }
        if(ct==floor(14*BT)){ //Big center eye + circular eyes
            with(objPShaderEffect){
                instance_destroy();
            }
            if(!irandom(10)){ //giygas easter egg
                with(instance_create(400,304,objPBullet)){
                    image_alpha=0;
                    image_blend=c_red;
                    killer=false;
                    sprite_index=sprGiygas;
                    speed=0.5;
                    tag=-999;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }
            else{
                with(instance_create(0,0,objPBgScreen)){
                    image_alpha=0;
                    image_blend=c_red;
                    instance_change_alpha(id,0.04,floor(BT),tween_sine_out);
                }
            }
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStatic;
                intensity=0.012;
            }
            with(objP3DCircle){
                image_alpha=1;
                dt=0;
                if(instance_exists(Internal_ScaleChangeCommand))
                with(Internal_ScaleChangeCommand) instance_destroy();
            }
            with(objPBullet){
                if(tag==0){
                    var ca=point_direction(400,304,x,y)+90;
                    killer=true;
                    image_alpha=1.0;
                    speed=0;
                    for(var i=-6;i&lt;7;i++){
                        for(var j=-1;j&lt;2;j+=2){
                            var cy=16*image_xscale*j*dcos(15*i);
                            var cx=8*image_xscale*i;
                            var cy0=0;
                            var cxx=x+cx*dcos(ca)-cy*dsin(ca);
                            var cyy=y-cx*dsin(ca)-cy*dcos(ca);
                            var cxx0=x+cx*dcos(ca);
                            var cyy0=y-cx*dsin(ca);
                            var obj=instance_create_ext(cxx0,cyy0,objPBullet,speed,direction,image_xscale*0.5,1);
                            obj.sprite_index=sprPCircleInverted;
                            obj.image_index=2;
                            instance_move_to(obj,cxx,cyy,floor(2*BT),tween_elastic_out);
                        }
                    }
                    instance_scale(id,image_xscale,floor(2*BT),tween_elastic_out);
                    sprite_index=sprPCircle;
                    image_index=0;
                    
                }
                if(tag==3){ //big center eye
                    killer=true;
                    image_alpha=1.0;
                    speed=0;
                    var a=scrMakeCircleTagDist(x,y,0,24,0.1,0,objPBullet,1);
                    for(var i=0;i&lt;array_length_1d(a);i++){
                        a[i].sprite_index=sprPCircleInverted;
                        a[i].image_index=2;
                        a[i].image_xscale=image_xscale*0.5;
                        a[i].image_yscale=image_yscale*0.5;
                        a[i].killer=false;
                        instance_move_to(a[i],x+16*image_xscale*dcos(a[i].direction),y-16*image_xscale*dsin(a[i].direction),floor(2*BT),tween_elastic_out);
                    }
                    /*
                    for(var i=-12;i&lt;13;i++){
                        for(var j=-1;j&lt;2;j+=2){
                            var cx=x+4*image_xscale*i;
                            var obj=instance_create_ext(cx,y,objPBullet,speed,direction,image_xscale*0.5,1);
                            
                            var cy=y+16*image_xscale*j*dcos(7.5*i);
                            
                            obj.image_index=2;
                            instance_move_to(obj,cx,cy,floor(2*BT),tween_elastic_out);
                        }
                    }*/
                    instance_scale(id,image_xscale,floor(2*BT),tween_elastic_out);
                    sprite_index=sprPCircle;
                    image_index=0;
                    
                }else if(tag==2){
                    //instance_change_variable(id,"image_xscale",4*image_xscale,floor(2*BT),tween_linear);
                }
            }
        
        }
        if(ct==floor(15*BT)){
            with(objPBullet){
                if(tag==3){
                    killer=false;
                    instance_fade_out(id,floor(BT));
                }
                else if(tag==1){
                    killer=false;   
                    instance_move_to(id,xstart,ystart,floor(BT),tween_linear);
                    instance_fade_out(id,floor(BT));
                }else if(tag==-999){
                    instance_change_alpha(id,0,floor(BT),tween_linear);
                }
            }
            with(objP3DCircle){
                killer=false;
                instance_fade_out(id,floor(0.5*BT));
            }
            with(objPShaderEffect){
                instance_change_variable(id,"intensity",0,floor(BT),tween_linear);
            }
            with(objPBgScreen){
                instance_change_alpha(id,0,floor(BT),tween_linear);
            }
        }
        if(ct mod floor(BT/4)==1&amp;&amp;ct&lt;floor(15*BT)-1){
            var obj=instance_create_ext(random(800),640,objPBullet,random_range(4,5),90+random_range(-10,10),0.5,2);
            obj.image_xscale*=3;
            obj.image_angle=obj.direction;
            obj.destroyOutside=true;
            obj.image_index=0;
        }
        break;
    }
    case marenolAvoidanceAttacks.GREEN_SQUARES:
    {
        if(ct==1){
            with(objPShaderEffect){
                instance_destroy();
            }
            with(objPBgScreen){
                instance_destroy();
            }
            with(objPBullet) if(tag==-999) instance_destroy();
        }
        if(ct&lt;floor(2*BT)){
            var ca=random(360);
            var cx=400+(ct)*dcos(ca);
            var cy=304-(ct)*dsin(ca);
            
            var obj=instance_create(cx,cy,objPTrail);
            obj.sprite_index=sprPCircleInverted;
            obj.image_index=4;
            obj.image_alpha=0.5;
            obj.alphaFactor/=5;
            obj.alphaThreshold/=5;
            instance_scale(obj,3*image_xscale,floor(BT),tween_linear);
        }
        if(ct mod 4 == 0 &amp;&amp; ct&lt;floor(3*BT)){ //radial arrow invert pattern
            repeat(6){
                var ba=random(360);
                var br=508;
                var bx=400+br*dcos(ba);
                var by=304-br*dsin(ba);
                
                var obj=instance_create_ext(bx,by,objPBullet,2,ba+180,2,0);
                obj.sprite_index=sprPBigArrowhead;
                instance_scale(obj,0.0,50-floor(0.2*ct),tween_linear);
                instance_change_alpha(obj,0.5,50-floor(0.2*ct),tween_sine_in);
                obj.gravity=0.2;
                obj.gravity_direction=obj.direction;//+random_range(-10,10);
                obj.image_angle=obj.direction;
                
            }
        }
        with(objPBullet){
            if(tag==0){
                if(image_xscale&lt;0.3) killer=false;
                if(image_xscale&lt;0.01){
                    image_alpha=0.1;
                    image_xscale=0;
                    image_yscale=0;
                    tag=1;
                    gravity=0;
                    speed/=2;
                    sprite_index=sprPBigArrowheadInverted;
                    instance_scale(id,1,25,tween_linear);
                    instance_change_alpha(id,1,25,tween_sine_out);
                    //instance_fade_out(id,30);
                    
                }
            }else if(tag==1){
                killer=(image_xscale&gt;0.5&amp;&amp;image_alpha&gt;0.5);
                image_alpha-=0.05;
                if(image_alpha&lt;=0.00) instance_destroy();
            }
        }
        if(ct&gt;floor(2*BT)&amp;&amp;ct&lt;floor(6*BT)){
            if(ct%8==1){
                //horizontal cosmetic lines in the bg
                
                var obj=instance_create_ext(-1,304,objPBullet,0,0,1,999);
                obj.sprite_index=sprLine;
                obj.image_xscale=25;
                obj.image_alpha=0.
                obj.image_angle=random_range(-8,8);
                obj.y+=400*dsin(obj.image_angle)+random_range(-24,24);
                obj.killer=false;
                obj.image_blend=c_red;
                instance_change_alpha(obj,0.1,100,tween_return_sine_inout);
            }
        }
        if(ct == floor(4*BT)){
            side=esign(objPlayer.x-400,1);
            var cx = 0;
            var cy = 128;
            for(var i=0;i&lt;800;i+=32){
                cy+=choose(-32,32);
                if(cy&gt;304-32) cy-=64; //prevent the squares from going too far vertically and covering the center
                else if(cy&lt;304+32-352) cy+=64;
                cx=i;
                for(var j=-1;j&lt;2;j+=2){
                    for(var k=0;k&lt;12;k++){
                        var obj=instance_create_ext(cx,cy+352*(j&gt;0)+32*j*k,objPBullet,0.5,90*j,1,5*j);
                        obj.sprite_index=sprSquareOrnament;
                        obj.image_blend=c_teal;
                        obj.killer=false;
                        obj.image_alpha=1;
                        instance_change_alpha(obj,0,floor(BT),tween_linear);
                    }
                }
                
            }
        }
        if(ct == floor(5*BT)){
             view_screen_shake(8,floor(2*BT));
        }
        if(ct == floor(5*BT)||ct==floor(5.33*BT)||ct==floor(5.66*BT)||ct==floor(6*BT)){ //top and bottom curtains activate
            var cx = 832/BT*(ct-floor(5*BT));
            with(objPBullet){
                var cxx=x;
                if(other.side&lt;0) cxx=800-cxx;
                if(cx&gt;cxx&amp;&amp;(tag==5||tag==-5)){
                    
                    var obj=instance_create_ext(x,y,objPBullet,0.5,90*sign(tag),1,6*sign(tag));
                    obj.sprite_index=sprSquareOrnament;
                    obj.image_blend=c_red;
                }
            }
        }
        if(ct==floor(6.5*BT)){
            with(objPBullet){
                if((x/32)%2==0&amp;&amp;tag==-6){
                    vspeed=16;
                    instance_change_variable(id,"vspeed",0.5,floor(0.5*BT),tween_sine_out);
                }
            }   
        }else if(ct==floor(7*BT)){
            with(objPBullet){
                if((x/32)%2==1&amp;&amp;tag==+6){
                    vspeed=-16;
                    instance_change_variable(id,"vspeed",-0.5,floor(0.5*BT),tween_sine_out);
                }
                if(tag!=999) instance_fade_out(id,floor(BT));
            }   
        }else if(ct==floor(7.5*BT)){
            with(objPBullet) killer=false;
            
        }
        if(ct&gt;floor(8*BT)&amp;&amp;ct&lt;floor(10*BT)){
            for(var i=-1;i&lt;2;i+=2){
                var cx=400+i*(416-(ct-floor(8*BT)));
                var cy=random(608);
                
                var obj=instance_create(cx,cy,objPTrail);
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=4;
                obj.image_alpha=0.5;
                obj.alphaFactor/=5;
                obj.alphaThreshold/=5;
                instance_scale(obj,3*image_xscale,floor(BT),tween_linear);
            }
        }
        
        if(ct mod 4 == 0 &amp;&amp; ct&lt;floor(11*BT) &amp;&amp; ct&gt;floor(8*BT)){
            repeat(6){
                var bx=400;
                var by=random(608);
                
                var obj=instance_create_ext(bx,by,objPBullet,2,choose(0,180),2,0);
                obj.sprite_index=sprPBigArrowhead;
                instance_scale(obj,0.0,40-floor(0.3*(ct-floor(8*BT))),tween_linear);
                instance_change_alpha(obj,0.5,40-floor(0.3*(ct-floor(8*BT))),tween_sine_in);
                obj.gravity=0.2;
                obj.gravity_direction=obj.direction;//+random_range(-10,10);
                obj.image_angle=obj.direction;
                
            }
        }
        if(ct==floor(10*BT)){
            with(objPBullet) if(tag==999) instance_destroy();
        }
        if(ct&gt;floor(10*BT)&amp;&amp;ct&lt;floor(14*BT)){
            if(ct%8==1){
                //vertical cosmetic lines in the bg
                
                var obj=instance_create_ext(400,-1,objPBullet,0,0,1,999);
                obj.sprite_index=sprLine;
                obj.image_xscale=25;
                obj.image_alpha=0.
                obj.image_angle=-90+random_range(-8,8);
                obj.x-=304*dcos(obj.image_angle)+random_range(-24,24);
                obj.killer=false;
                obj.image_blend=c_red;
                instance_change_alpha(obj,0.1,100,tween_return_sine_inout);
            }
        }
        if(ct==floor(12*BT)){
            var cy = 0;
            var cx = 128;
            for(var i=0;i&lt;=608;i+=32){
                cx+=choose(-32,32);
                if(cx&gt;400-64) cx-=64;
                else if(cy&lt;400+64-544) cx+=64; //prevent the squares from going to far horizontally and covering the center
                for(var j=-1;j&lt;2;j+=2){
                    for(var k=0;k&lt;16;k++){
                        cy=i;
                        var obj=instance_create_ext(cx+544*(j&gt;0)+32*j*k,cy,objPBullet,0.5,0+180*(j&gt;0),1,5*j);
                        obj.sprite_index=sprSquareOrnament;
                        obj.image_blend=c_teal;
                        obj.killer=false;
                        obj.image_alpha=1;
                        instance_change_alpha(obj,0,floor(BT),tween_linear);
                    }
                }
                var obj0=instance_create_ext(cx+544,cy,objPBullet,0.5,180,1,5);
                obj0.sprite_index=sprSquareOrnament;
                obj0.image_blend=c_teal;
                obj0.killer=false;
                obj0.image_alpha=1;
                instance_change_alpha(obj0,0,floor(BT),tween_linear);
            }
        }
        
        if(ct == floor(13*BT)){
             view_screen_shake(8,floor(2*BT));
        }
        if(ct == floor(13*BT)||ct==floor(13.33*BT)||ct==floor(13.66*BT)||ct==floor(14*BT)){ //left and right curtains activate
            with(objPBullet){
            
                if(608/BT*(ct-floor(13*BT))&gt;y&amp;&amp;(tag==5||tag==-5)){
                    var obj=instance_create_ext(x,y,objPBullet,0.5,90+90*sign(tag),1,6*sign(tag));
                    obj.sprite_index=sprSquareOrnament;
                    obj.image_blend=c_red;
                        //instance_fade_out(obj,floor(2*BT));
                }
            }
        }
        
        if(ct==floor(14.5*BT)){
            with(objPBullet){
                if((y/32)%2==0&amp;&amp;tag==-6){
                    hspeed=16;
                    instance_change_variable(id,"hspeed",0.5,floor(0.5*BT),tween_sine_out);
                }
            }   
        }else if(ct==floor(15*BT)){
            with(objPBullet){
                if((y/32)%2==1&amp;&amp;tag==+6){
                    hspeed=-16;
                    instance_change_variable(id,"hspeed",-0.5,floor(0.5*BT),tween_sine_out);
                }
                if(tag!=999) instance_fade_out(id,floor(BT));
            }   
        }else if(ct==floor(15.5*BT)){
            with(objPBullet) killer=false;
        }
        
        break;
    }
    case marenolAvoidanceAttacks.TENTACLES:
    {
        if(ct==1){ //top right corner tentacles
            
            for(var i=0;i&lt;20;i++){
                var cx=800+random_range(-32,32);
                var cy=0+random_range(-32,32);
                
                var obj=instance_create_ext(cx,cy,objPBullet,random_range(7,8),-random_range(90,180),1,irandom_range(2,4));
                obj.gravity=random_range(0.05,0.1);
                obj.gravity_direction=choose(-45,135);//point_direction(cx,cy,400,304)+random_range(115,15);
                obj.gravity*=25;
                obj.speed*=5;
                obj.image_index=0;
                obj.destroyOutside=true;
                with(obj) scrTraceTrajectory(objPBullet,50,24,tag);
                
                ///TODO: Trace the trajectories of the bullets and activate them accordingly
            }  
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    killer=false;
                    image_alpha=0.0;
                    sprite_index=sprPCircleInverted;
                    image_index=4;
                }
            }
        }
        if(ct&lt;floor(2*BT)){
            
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    image_alpha+=tag/100;
                }
            }
        }
        if(ct==floor(2*BT)){
            with(objPBullet) if(tag==999) instance_destroy();
            instance_create(0,0,objPBloodRed);
            view_screen_shake(8,floor(2*BT));
            with(objPBullet){
                if(tag==2){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
                else{
                    speed=0;
                    gravity=0;
                    image_alpha=0.5;
                }
            }
        }
        if(ct==floor(2*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(2.5*BT)){
            with(objPBullet){
                if(tag==3){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(2.5*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(3*BT)){
            with(objPBullet){
                if(tag==4){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(3*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(4*BT)){ //aimed tentacles
            with(objPBloodRed) instance_destroy();
            for(var i=0;i&lt;12;i++){
                var cx=random(800);
                var cy=0;
                var ca=random_range(-30,30);
                var cl=point_distance(cx,cy,objPlayer.x,objPlayer.y)+random(200);
                var obj=instance_create_ext(cx,cy,objPBulletCurve,4*random_range(5,6),point_direction(cx,cy,objPlayer.x,objPlayer.y)+ca,1,irandom_range(2,4));
                obj.curveSpeed=-2*ca*obj.speed/cl;
                obj.gravity=0;//random_range(0.05,0.1);
                obj.gravity_direction=obj.direction+180+random_range(45,135);
                obj.image_index=0;
                obj.destroyOutside=true;
                
                with(obj) scrTraceTrajectory(objPBullet,50,24,tag);
                
                ///Trace the trajectories of the bullets and activate them accordingly
            }  
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    killer=false;
                    image_alpha=0.0;
                    sprite_index=sprPCircleInverted;
                    image_index=4;
                }
            }
        }
        if(ct&gt;floor(4*BT)&amp;&amp;ct&lt;floor(6*BT)){
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    image_alpha+=tag/100;
                }
            }
        }
        if(ct==floor(6*BT)){
            instance_create(0,0,objPBloodRed);
            view_screen_shake(8,floor(2*BT));
            with(objPBullet){
                if(tag==2){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
                else{
                    speed=0;
                    gravity=0;
                    image_alpha=0.5;
                }
            }
        }
        if(ct==floor(6*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(6.5*BT)){
            with(objPBullet){
                if(tag==3){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(6.5*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(7*BT)){
            with(objPBullet){
                if(tag==4){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(7*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(8*BT)){
            with(objPBloodRed) instance_destroy();
        }
        if(ct==floor(8*BT)){ //swirly tentacles
            with(objPBloodRed) instance_destroy();
            for(var i=0;i&lt;20;i++){
                var cx=400+random_range(-32,32);
                var cy=304+random_range(-32,32);
                
                var obj=instance_create_ext(cx,cy,objPBulletCurve,random_range(1,6),random(360),1,irandom_range(2,4));
                obj.gravity=random_range(0.05,0.1);
                obj.gravity_direction=obj.direction+180+random_range(45,135);
                obj.image_index=0;
                obj.destroyOutside=true;
                obj.speed*=5;
                obj.curveSpeed*=5;
                obj.gravity*=25;
                with(obj) scrTraceTrajectory(objPBullet,50,24,tag);
                
                ///Trace the trajectories of the bullets and activate them accordingly
            }  
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    killer=false;
                    image_alpha=0.0;
                    sprite_index=sprPCircleInverted;
                    image_index=4;
                }
            }
        }
        with(objPBullet){
            if(tag==5){
                image_xscale-=0.03;
                image_yscale-=0.03;
                
                if(image_xscale&lt;0.1) instance_destroy();
            }
        }   
        
        if(ct&gt;floor(8*BT)&amp;&amp;ct&lt;floor(10*BT)){
            with(objPBullet){
                if(tag&gt;=2&amp;&amp;tag&lt;=4){
                    image_alpha+=tag/100;
                }
            }
        }
        if(ct==floor(10*BT)){
            instance_create(0,0,objPBloodRed);
            view_screen_shake(8,floor(2*BT));
            with(objPBullet){
                if(tag==2){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
                else{
                    speed=0;
                    gravity=0;
                    image_alpha=0.5;
                }
            }
        }
        if(ct==floor(10*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(10.5*BT)){
            with(objPBullet){
                if(tag==3){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(10.5*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(11*BT)){
            with(objPBullet){
                if(tag==4){
                    killer=true;
                    image_alpha=1;
                    tag=5;
                    //instance_shrink_out(id,30);
                }
            }
        }
        if(ct==floor(11*BT+2)){ //deactivate
            with(objPBullet){
                if(tag==5) killer=false;
            }
        }
        if(ct==floor(12*BT)){
            with(objPBloodRed) instance_destroy();
        }
        
        if(ct==floor(12*BT)){
            with(objP3DCircle) instance_destroy();
            var obj=instance_create_ext(objPlayer.x,objPlayer.y,objP3DCircle,0,0,200,0);
            obj.dt=0.1;
            obj.numCherries=4;
            obj.phaseSpeed=0;
            obj.rotationSpeed=0;
            obj.z=-200;
            instance_change_variable(obj,"dt",0.005,floor(2*BT),tween_sine_out);
            obj.image_alpha=0;
            instance_change_alpha(obj,1,floor(2*BT),tween_sine_out);
            
            with(obj){
                event_perform(ev_step,ev_step_normal);
                for(var i=0;i&lt;numCherries;i++){
                    with(cherries[i]) {
                        sprite_index=sprPCircleInverted;
                        image_index=4;
                    }
                }
            }
            
            view_move_scale(objPlayer.x-400,objPlayer.y-304,(11*32)/608,floor(4*BT),tween_sine_out);
        }   
        if(ct&gt;floor(12*BT)&amp;&amp;ct&lt;floor(15*BT)){ //Ring of bullets around the player + contracting bullets
            if(ct mod 2 == 1){
                var cxstart=objPlayer.x;
                var cystart=objPlayer.y;
                with(objP3DCircle){
                    cxstart=x;
                    cystart=y;
                }      
                var ca=random(360);
                var cr=200+(ct-floor(12*BT))*8;
                var cx=cxstart+cr*dcos(ca);
                var cy=cystart-cr*dsin(ca);
                var obj=instance_create_ext(cx,cy,objPBullet,0.1,ca+180,2,10);
                obj.gravity=0.09;
                obj.gravity_direction=obj.direction;
                obj.image_angle=obj.direction;
                obj.image_index=0;
                instance_change_variable(obj,"image_yscale",0.5,15,tween_sine_out);
                instance_change_variable(obj,"image_xscale",1.5+(ct-floor(12*BT))/50,15,tween_sine_out);
                
                //instance_scale(obj,1,10,tween_sine_out);
            }
        }
        if(ct&gt;floor(15.2*BT)){
            with(objPBullet){
                if(tag==10){
                    image_xscale+=0.3;
                    image_yscale-=0.01;
                }
            }
        }
        if(ct==floor(15.5*BT)){
        
        
            with(instance_create(0,0,objPShaderEffect)){
                shader=shStaticInvert;
                intensity=0.012;
            }
            with(objPBullet){
                speed/=2;
                gravity=0;
                killer=false;
            }
            
            //instance_create(0,0,objPColourInvert);
        }
        with(objPBullet){
            if(tag==10){
                if(speed&gt;7) speed=7;
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.DECAY:
    {
        if(ct==1){
            with(objPlayer) instance_destroy();
            room_goto(rPAvoidance7);
        }
        if(ct==2){
            vignette=instance_create(0,0,objPShaderRectangle);
            vignette.shader=shBloodVignette;
            vignette.image_alpha=1;
            vignette.intensity=1;
            vignette.image_blend=c_red;
            view_set_scale((11*32)/608);
            //view_scale((9*32)/608,floor(4*BT),tween_sine_out);
            //var obj=instance_create(-32,-32,objPShaderRectangle);
            //obj.shader=shSqrtWave;
            //obj.image_xscale=832;
            //obj.image_yscale=640;
            //obj.image_blend=c_red;
            
            //instance_change_alpha(obj,1,30,tween_linear);
            
            with(instance_create(0,0,objPShaderEffect)){
                 shader=shDoubleWave;
            }
            global.infJump=true; //grant infjump
            with(instance_create(400,304,objPBullet)){ //clock
                killer=false;
                sprite_index=sprLine;
                image_blend=c_red;
                image_alpha=0.08;
                tag=999;
                image_angle=90;
                image_xscale=4;
            }
            //create the clock effect
        }
        if(ct mod floor(2*BT)==2){//clock effect
            with(objPBullet){
                if(tag==999){
                    instance_change_variable(id,"image_angle",image_angle-30,floor(BT),tween_elastic_out);
                }else if(tag==999){
                    instance_change_variable(id,"image_angle",image_angle-30/12,floor(BT),tween_elastic_out);
                }
            }
        }
        if(ct==floor(16*BT)){ 
            //scale the view back to normal
            view_scale(1,floor(8*BT),tween_sine_inout);
            //clock hour hand
            with(instance_create(400,304,objPBullet)){
                killer=false;
                sprite_index=sprLine;
                image_blend=c_red;
                image_alpha=0.3;
                tag=1000;
                image_angle=100;
                image_xscale=2;
            }
            
            //clockwork mechanism
            
            //large gear, counter-clockwise
            
            
            var obj=instance_create(400,304+100,objP3DCircle);
            obj.image_xscale=400;
            obj.killer=true;
            obj.z=-200;
            obj.phaseSpeed=0;
            obj.rotationSpeed=0;
            obj.dt=+0.001;
            obj.t=random(360);
            obj.numCherries=10;
            obj.image_alpha=0;
            obj.baseScale=0.5;
            instance_scale(obj,100,floor(12*BT),tween_sine_out);
            instance_change_alpha(obj,1,floor(6*BT),tween_linear);
            instance_move_to_polar(obj,400,304,0,+720,floor(4*BT),tween_sine_out);
            
            //small gear, clockwise
            var obj0=instance_create(400,304+50,objP3DCircle);
            obj0.image_xscale=300;
            obj0.killer=true;
            obj0.z=-200;
            obj0.dt=-0.001;
            obj0.t=random(360);
            obj0.numCherries=6;
            obj0.phaseSpeed=0;
            obj0.rotationSpeed=0;
            obj0.image_alpha=0;
            obj0.baseScale=0.5;
            instance_scale(obj0,0,floor(12*BT),tween_sine_out);
            instance_change_alpha(obj0,1,floor(6*BT),tween_linear);
            instance_move_to_polar(obj0,400,304,0,-720,floor(4*BT),tween_sine_inout);
        }
        if(ct == floor(16*BT)){
            with(objPBullet){
                if(tag==1){
                    killer=false;
                    image_alpha=0.8;
                }
            }
        }
        if(ct mod floor(4*BT)==2){
            repeat(32){ //bg effect around the box
                
            }
            
            with(objPBullet){ //clock pulsing
                if(tag==999){
                    image_alpha*=5;
                    instance_change_alpha(id,image_alpha/5,floor(2*BT),tween_sine_out);
                }
            }
            with(objPShaderEffect){ //distortion shader
                intensity=0.1;
                instance_change_variable(id,"intensity",0,floor(2*BT),tween_sine_out);
            }
            with(vignette){ //vignette
                intensity=1;
                instance_change_variable(id,"intensity",0,floor(2*BT),tween_sine_out);
            }
            if(ct&lt;floor(16*BT)){ //center circles
                var a=scrMakeCircleTagDist(400,304,random(360),8,2.5,0,objPBullet,2);
                for(var i=0;i&lt;array_length_1d(a);i++){
                    a[i].image_xscale=0.25;
                    a[i].image_yscale=0.25;
                    a[i].image_index=5;
                    a[i].image_angle=a[i].direction;
                    instance_change_variable(a[i],"image_xscale",2.0,30,tween_linear);
                    a[i].destroyOutside=true;
                    a[i].mask_index=sprPCircleSmall;
                }
                decayScale=2.0;
                instance_change_variable(id,"decayScale",1.0,floor(2*BT),tween_sine_out);
                
                
            }else{ //blood splatter
                var cx=400;
                var cy=304-128;
                for(var i=0;i&lt;20;i++){
                    var obj=instance_create_ext(cx,cy,objPBullet,random_range(6,12),90+random_range(-30,30),random_range(3,6),3);
                    instance_scale(obj,obj.image_xscale/8,15,tween_sine_out);
                    obj.gravity=0.3;
                    obj.image_index=0;
                }
                view_screen_shake(4,4);
                decayScale=1.0;
                instance_change_variable(id,"decayScale",0.5,floor(2*BT),tween_sine_out);
                with(objPBullet){ //Blow the bullets away from the player to avoid cluttering the arena too much
                    if(tag==1){
                        direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                        image_angle=direction;
                        var tempSpeed=speed;
                        speed=max(speed*5,3);
                        instance_change_variable(id,"speed",max(tempSpeed,1),30,tween_sine_out);
                        instance_change_variable(id,"xscalestart",3*xscalestart,30,tween_linear);
                        
                    }
                }
            }
            
        }
        if(ct mod 12 == 2&amp;&amp;ct&lt;floor(16*BT)){ //bullet trail behind the player
                var obj=instance_create_ext(objPlayer.x,objPlayer.y,objPBullet,random(0.5),random(360),random_range(0.5,1.2),1);
                
                obj.sprite_index=sprPCircleInverted;
                obj.image_index=irandom(obj.image_number-1);
                obj.killer=false;
                obj.image_alpha=0;
                obj.xscalestart=obj.image_xscale;
                obj.yscalestart=obj.image_yscale;
                
                obj.image_xscale=obj.xscalestart*decayScale;
                obj.image_yscale=obj.yscalestart*decayScale;
                
                instance_change_alpha(obj,1,45,tween_linear);
                
            }
        if(ct&gt;floor(16*BT)&amp;&amp;ct mod 4 == 0){ //block decay effect
            for(var i=-1;i&lt;2;i+=2){
                for(var j=-1;j&lt;2;j+=2){
                    var cx=400+128*i+random_range(-24,24);
                    var cy=304+j*(ct-floor(16*BT))/1.5+random_range(-24,24);
                    var obj=instance_create_ext(cx,cy,objPDecayOrb,0,random(360),0,4);
                    
                    /*
                    obj.sprite_index=sprPCircleInverted;
                    obj.image_index=irandom(obj.image_number-1);
                    obj.killer=false;
                    obj.image_alpha=0;
                    obj.xscalestart=obj.image_xscale;
                    obj.yscalestart=obj.image_yscale;
                    
                    obj.image_xscale=obj.xscalestart*decayScale;
                    obj.image_yscale=obj.yscalestart*decayScale;
                    */
                    
                    instance_scale(obj,3,30,tween_linear);
                    
                }    
            }
        }
        with(objPBullet){ //activate the bullet if alpha is high enough
            if(tag==1||tag==4||tag==5){
                if(image_alpha&gt;0.9&amp;&amp;tag==1&amp;&amp;ct&gt;floor(4*BT)) {
                    killer=true;
                }else if(image_alpha&gt;=1&amp;&amp;tag==4){
                    instance_fade_out(id,100);
                    tag=5;
                }
                image_xscale=xscalestart*other.decayScale;
                image_yscale=yscalestart*other.decayScale;
            }
            //limit the bullet speed
            else if(tag==3){
                vspeed=min(vspeed,7);
            
            }
        }
        if(ct==floor(17*BT)){ //NEW block deletion using BetterBlocks
            with(objBetterBlock){
                if(tag==1){
                    instance_change_variable(id,"image_yscale",-0.5,floor(8*BT),tween_linear);
                    //instance_move_to(id,x,y+32*(image_yscale-0.5),floor(8*BT),tween_linear);
                }else 
                instance_change_variable(id,"image_yscale",0.5,floor(8*BT),tween_linear);
            }
        }
        if(ct&gt;floor(17*BT)){ //block deletion
            with(objMiniBlock){
                if(abs((y+16)-304)&lt;(ct-17*BT)/1.3) instance_destroy();
            }
            if((ct mod 4 == 1) &amp;&amp; (objPlayer.x&gt;256&amp;&amp;objPlayer.x&lt;288||objPlayer.x&gt;512&amp;&amp;objPlayer.y&lt;544)){ //bleed effect
                with(instance_create(objPlayer.x,objPlayer.y,objPDecayBloodOrb)){
                    image_xscale=0;
                    image_yscale=0;
                    instance_scale(id,1.5,100,tween_sine_inout);
                }
            }
        }
        
        break;
    }
    case marenolAvoidanceAttacks.DECAY_SLICE:
    {
        if(ct==1){ 
            with(objPDecayBloodOrb) instance_destroy();
            with(oRdrChangeAlphaCommand) instance_destroy();
            with(oRdrFadeCommand) instance_destroy();
            with(objPShaderEffect){ //activate the shader effect
                intensity=0;
                instance_change_variable(id,"intensity",0.02,floor(4*BT),tween_linear);
            }
            with(objPBullet){ //slow down and deactivate all of the bullets
                gravity=0;
                speed/=2;
                killer=false;
                image_alpha=min(image_alpha,0.5);
                //instance_fade_out(id,floor(3*BT));
            }
            
            //var obj=instance_create(0,0,objPHueShift);
            //obj.intensity=0;
            //obj.shader=shSqrtWave;
            //instance_change_variable(obj,"intensity",1,30,tween_linear);
            
        }
        with(objPBullet){
            if(tag==999){
                image_angle-=friction;
                friction+=0.4;
            }else if(tag==1000){
                image_angle-=friction;
                friction+=0.4/12;
            }
        }
        if(ct==floor(4*BT)){ //clean everything
            with(objP3DCircle) instance_destroy();
            with(objPBullet) instance_destroy();
            with(objPDecayOrb) instance_destroy();
            
            with(objBlock) {
                if(x&gt;=0&amp;&amp;x&lt;800){
                    instance_destroy();
                }
            }
            with(objPHueShift) instance_destroy();
            with(objPShaderEffect) instance_destroy();
            with(instance_create(0,0,objPBloodRed)) image_alpha=0;
            
            var obj=instance_create(0,0,objPShaderRectangle);
            obj.shader=shSqrtWave;
            
            instance_change_alpha(obj,1,30,tween_linear);
            instance_change_variable(obj,"intensity",0.7,30,tween_linear);
            
            view_screen_shake(8,floor(4*BT));
        }
        if(ct&gt;floor(4*BT)){ //chainsaw blood splatter
            if(ct % 4 == 0 ){
                repeat(10){
                    var obj=instance_create_ext(400,random(608),objPBullet,random_range(1,9),-random(180),random_range(0.5,1.5),0);
                    obj.sprite_index=sprPCircleInverted;
                    obj.image_index=4;
                }
                repeat(10){
                    var obj=instance_create_ext(400,random(608),objPTrail,random_range(0.5,3),-random(180),random_range(0.5,1.5),0);
                    obj.sprite_index=sprPCircleInverted;
                    obj.alphaFactor=0.01;
                    obj.alphaThreshold=0.01;
                    obj.image_index=4;
                }
            }
        }else{
            if(ct % 4 == 0 ){
                for(var i=-1;i&lt;2;i+=2){
                    var obj=instance_create_ext(400+64*i,random(608),objPBullet,random_range(0.6,1.2),90+90*i,random_range(0.25,0.5),0);
                    obj.sprite_index=sprPCircleInverted;
                    obj.image_index=0;
                    obj.image_alpha=0;
                    obj.killer=false;
                    instance_scale(obj,4*obj.image_xscale,30,tween_linear);
                    instance_change_alpha(obj,1,30,tween_linear);
                }
            }
        }   
        break;
    }
    case marenolAvoidanceAttacks.THREADS:
    {   
        if(ct==1){
            with(objPShaderRectangle) instance_destroy();
            with(objBlock) {
                if(x&gt;=0&amp;&amp;x&lt;800){
                    instance_destroy();
                }
            }
            with(objPBloodRed) instance_destroy();
            with(objPBullet) instance_destroy();
            
            var obj=instance_create(0,0,objPShaderEffect);
            obj.shader=shVignette;
            obj.intensity=0;
            instance_change_variable(obj,"intensity",1,floor(4*BT),tween_linear);
        }
        
        if(ct mod floor(4*BT) ==1){ //Bullet pulsating
            decayScale=2.0;
            instance_change_variable(id,"decayScale",1.0,floor(2*BT),tween_sine_out);
            with(objPBullet){
                if(tag==6){
                    speed=3*speed;
                    instance_change_variable(id,"speed",speed/2.5,30,tween_sine_out);
                }
            }
        }
        if(ct mod 8 == 1){ //accelerating bursts from the center
            repeat(3){
                var obj=instance_create_ext(400+random_range(-32,32),304+random_range(-32,32),objPBullet,3,random(360),0.5,6);
                obj.sprite_index=sprPCircleInverted;
                
                obj.xscalestart=obj.image_xscale;
                obj.yscalestart=obj.image_yscale;
                
                obj.image_xscale=obj.xscalestart*decayScale;
                obj.image_yscale=obj.yscalestart*decayScale;
                obj.image_index=4;
                obj.image_alpha=0;
                instance_change_alpha(obj,1,30,tween_linear);
            }
        }
        if(ct mod floor(0.66*BT)==1){ //cosmetic rectangles in the bg
            var obj=instance_create_ext(random(800),-random(32),objPBullet,2.5,-90,1,8);
            obj.killer=false;
            obj.image_alpha=0;
            
            with(objPBullet){
                if(tag==8){
                    var obj=instance_create(x,y,objPTrail);
                    obj.sprite_index=sprSquare;
                    obj.image_blend=c_yellow;
                    obj.image_xscale=0.5;
                    obj.alphaFactor=0.001;
                    obj.alphaThreshold=0.001;
                    obj.image_alpha=0.2;
                    
                }
            }
            
            //cosmetic lines in the bg
            
            var obj=instance_create_ext(random(800),0,objPBullet,0,0,1,999);
            obj.sprite_index=sprLine;
            obj.image_xscale=25;
            obj.image_alpha=0.
            obj.image_angle=-90+random_range(-30,30);
            obj.killer=false;
            obj.image_blend=c_red;
            instance_change_alpha(obj,0.1,100,tween_return_sine_inout);
        }
        if(ct mod floor(1.33*BT) == 1){ //aimed lasers.,activate after 3 cycles
            
            with(objPBullet) {
                if(tag&lt;4){
                    tag++;
                    if(tag==3){ //activate
                        image_alpha=1;
                        killer=true;
                        image_index=0;
                        //speed=1;
                        //direction=random(360);
                        //instance_shrink_out(id,50);
                    } else if(tag==4){ //fade out
                        killer=false;
                        instance_fade_out(id,30)
                    }
                }
            } 
            var castart=random(360);
            var cxstart=400+600*dcos(castart);
            var cystart=304-600*dsin(castart);
            var ca=point_direction(cxstart,cystart,objPlayer.x,objPlayer.y);
            var cscale=random_range(0.5,1);
            for(var i=0;i&lt;70;i++){ // spawn the aimed lasers
                var cx=cxstart+24*i*dcos(ca);
                var cy=cystart-24*i*dsin(ca);
                if(cx&lt;-32||cx&gt;room_width+32||cy&lt;-32||cy&gt;room_height+32) continue;
                else{
                    var obj=instance_create_ext(cx,cy,objPBullet,0,0,cscale,0);
                    obj.image_alpha=0.0;
                    obj.killer=false;
                    obj.image_index=8;
                    //instance_scale(obj,1,floor(6*BT),tween_sine_out); 
                    instance_change_alpha(obj,0.4,floor(2.66*BT),tween_sine_out); 
                }
            }
        }
        with(objPBullet){
            if(tag==6){
                image_xscale=xscalestart*other.decayScale;
                image_yscale=yscalestart*other.decayScale;
            }
        }
        break;
    }
    case marenolAvoidanceAttacks.TRIANGLES_SQUARES:
    {
        if(ct==1){ //clean up things from the last attack
            with(objPTrail) alphaFactor*=5;
            with(oRdrChangeAlphaCommand) instance_destroy();
            with(objPBullet){
                if(tag&lt;=3||tag==6||tag==999){
                    killer=false;
                    instance_fade_out(id,30);
                    tag=-9;
                }
            }
            var obj=instance_create_ext(400,304,objP3DCircle,0,0,660,0); //create the contracting ring
            obj.dt=0;
            obj.rotationSpeed=0;
            obj.phaseSpeed=0;
            obj.z=-200;
            obj.numCherries=64;
            
        }  
        if(ct mod 1 == 0){
            var obj=instance_create_ext(random(800),304,objPTrail,random(0.5),random(360),random_range(0.1,0.2),0);
            obj.sprite_index=sprSquare;
            obj.image_index=1;
            obj.image_blend=c_yellow;
            obj.alphaFactor=0.01;
            obj.alphaThreshold=0.01;
            obj.image_alpha=0.3;
            
        }
        if(ct mod floor(0.66*BT)==2){ //every clock tick, shrink the ring
            with(objPBullet){
                if(tag==0) image_index=2;
            }
            with(objP3DCircle) { //bullet pulsating
                baseScale=2.0;
                instance_change_variable(id,"baseScale",1,30,tween_sine_out);
                image_xscale-=16;
            }
            
        }
        if(ct mod floor(4*BT) ==1){ //every heartbeat, switch the image index of the triangles and the squares
            decayScale=2.0;
            instance_change_variable(id,"decayScale",1.0,floor(2*BT),tween_sine_out);
            with(objPBullet){
                if(tag==1||tag==-1){ //switch the triangles and squares
                    killer=!killer;
                    image_alpha=0.3+0.4*killer;
                    image_index=!image_index;
                    speed=3*speed;
                    instance_change_variable(id,"speed",speed/3,30,tween_sine_out);
                }
            }
        }
        if(ct mod 4 == 1 ){ //triangles and squares
            var cscale=random_range(0.5,2);
            var obj=instance_create_ext(random(800),-32,objPBullet,1.5*cscale,-90,0.75*cscale,1);
            obj.sprite_index=sprTriangle;
            obj.image_index=irandom(1);
            obj.image_blend=c_red;
            obj.killer=obj.image_index;
            
            obj.image_alpha=0.3+0.4*obj.killer;
            obj.xscalestart=obj.image_xscale;
            obj.yscalestart=obj.image_yscale;
            
            obj.image_xscale=obj.xscalestart*decayScale;
            obj.image_yscale=obj.yscalestart*decayScale;
            //instance_scale(obj,0.75*obj.image_xscale,30,tween_sine_out);
            
            var obj=instance_create_ext(random(800),608+32,objPBullet,1.5*cscale,90,0.75*cscale,-1);
            obj.sprite_index=sprSquareDash;
            obj.image_index=irandom(1);
            obj.image_blend=c_green;
            obj.killer=obj.image_index;
            
            obj.image_alpha=0.3+0.4*obj.killer;
            obj.xscalestart=obj.image_xscale;
            obj.yscalestart=obj.image_yscale;
            
            obj.image_xscale=obj.xscalestart*decayScale;
            obj.image_yscale=obj.yscalestart*decayScale;
            //instance_scale(obj,0.75*obj.image_xscale,30,tween_sine_out);
            
        }
        with(objPBullet){
            if(tag==1&amp;&amp;y&gt;304+64||tag==-1&amp;&amp;y&lt;304-64){
                tag=2;
                instance_fade_out(id,50);
                killer=false;
            }
            if(tag==1||tag==-1){ //handle bullet scale
                image_xscale=xscalestart*other.decayScale;
                image_yscale=yscalestart*other.decayScale;
            }
        }
        
        break;
    }
    case marenolAvoidanceAttacks.NOOSE:
    {
        if(ct==1){
            with(objPShaderEffect) //fade out the shader effect
            instance_change_variable(id,"intensity",0,floor(BT),tween_linear);
            var cr=200;
            with(objP3DCircle) {
                cr=image_xscale;
                instance_scale(id,image_xscale/1.5,100,tween_sine_inout);
            }
            with(instance_create(0,0,objPPendulum)) { //create the pendulum effect
                radius=cr;
                instance_change_variable(id,"radius",radius/1.5,128,tween_sine_inout);
                instance_change_variable(id,"intensity",1,30,tween_sine_inout);
                freq=360/floor(16*BT);
            }
            with(instance_create(0,0,objP3DNumbers)){ //create the background numbers
                image_alpha=0;
                instance_change_alpha(id,1,30,tween_sine_inout);
            
            }
            with(objPBullet){
                if(tag!=0){
                    killer=false;
                    instance_fade_out(id,50);
            
                }
            }
        }
        if(ct==floor(BT)){
            with(objPShaderEffect) instance_destroy(); //destroy the shader effect
        }   
        if(ct==100){
            for(var i=0;i&lt;64;i+=16){ //top bullets of the noose
                var cx=400;
                var cy=i;
                var obj=instance_create(cx,cy,objP3DBullet);
                obj.z=-200;
                obj.sprite_index=sprPCircle;
                obj.image_index=2;
                obj.image_alpha=0;
                obj.baseAlpha=0;
                instance_change_variable(obj,"baseAlpha",1,30,tween_sine_out);
            }
            for(var i=8;i&lt;40;i+=16){ //knot of the noose
                for(var j=-1;j&lt;2;j+=2){
                    var cx=400+12*j;
                    var cy=i;
                    var obj=instance_create(cx,cy,objP3DBullet);
                    obj.z=-200;
                    obj.sprite_index=sprPCircle;
                    obj.image_index=2;
                    obj.image_alpha=0;
                    obj.baseAlpha=0;
                    instance_change_variable(obj,"baseAlpha",1,30,tween_sine_out);
                }
            }
            for(var i=-1;i&lt;2;i+=2){ //fork attaching the rope to the circle
                var cxend=0;
                var cyend=0;
                with(objPPendulum) {
                    cxend=400+i*radius*dcos(60);
                    cyend=304-radius*dsin(60);
                }
                var cd=point_distance(400,64,cxend,cyend);
                for(var j=0;j&lt;cd;j+=16){
                    var cx=lerp(400,cxend,j/cd);
                    var cy=lerp(64,cyend,j/cd);
                    var obj=instance_create(cx,cy,objP3DBullet);
                    obj.z=-200;
                    obj.sprite_index=sprPCircle;
                    obj.image_index=2;
                    obj.image_alpha=0;
                    obj.baseAlpha=0;
                    instance_change_variable(obj,"baseAlpha",1,30,tween_sine_out);
                }
            }
            //create the extra noose visuals
            
        }
        if(ct mod floor(0.66*BT)==1){ //increment the numbers
            with(objP3DNumbers){
                index=(index+1) mod 12;
            }
            with(objP3DCircle){ 
                
                 
                for(var i=0;i&lt;numCherries;i++){ //cosmetic cherries
                    with(cherries[i]){
                        var obj=instance_create_ext(x,y,objPBullet,5,point_direction(x,y,400,304),3,5);
                        obj.image_alpha=0.2;
                        instance_scale(obj,0.5,70,tween_sine_out);
                        instance_fade_out(obj,70);
                        obj.image_angle=obj.direction;
                        obj.image_index=4//image_index;
                        obj.killer=false;
                    }
                }
            }   
        }
        if(ct mod floor(1.33*BT)==1){ //spawn inward bullets
            with(objP3DCircle){
                var ind = irandom(numCherries-1);
                with(cherries[ind]){
                    for(var i=0;i&lt;2;i++){
                        for(var j=0;j&lt;2;j++){
                            var cx=x;
                            var cy=y;
                            if(i==0) cx=800-cx;
                            if(j==0) cy=608-cy;
                            
                            var obj=instance_create_ext(cx,cy,objPBullet,2,point_direction(cx,cy,400,304),3,5);
                            obj.image_angle=obj.direction;
                            obj.image_index=image_index;
                            instance_change_variable(obj,"image_xscale",0.75,30,tween_sine_out);
                            instance_change_variable(obj,"image_yscale",0.375,30,tween_sine_out);
                    
                        }
                    }
                }  
            }
        }
        if(ct mod floor(4*BT) ==1){//TODO: every heartbeat, switch the image index of the triangles and the squares
            with(objP3DNumbers){
                numberScale=1.0;
                instance_change_variable(id,"numberScale",0.75,floor(2*BT),tween_sine_out);
            }
            with(objP3DCircle){
                baseScale*=2;
                instance_change_variable(id,"baseScale",baseScale/2,floor(2*BT),tween_sine_out);
            }
            with(objP3DBullet){
                baseScale*=2;
                instance_change_variable(id,"baseScale",baseScale/2,floor(2*BT),tween_sine_out);
            }
        }
        with(objPBullet){
            if(tag==5){
                if(point_distance(400,304,x,y)&lt;16){
                    tag=6;
                    killer=false;
                    instance_fade_out(id,20);
                }
            }
        }
        //Set up a second view for the inside of the swinging pendulum
        //bullets that touch the pendulum are redirected inside
        break;
    }
    case marenolAvoidanceAttacks.FINAL_FALL:
    {
        if(ct==1){
            
            with(objPPendulum){
                instance_change_variable(id,"intensity",0,floor(2*BT),tween_sine_inout);
                freq=0;
            }
            with(objP3DNumbers) instance_fade_out(id,floor(2*BT));
            with(objP3DBullet){
                var obj=scrCopy(objP3DBullet);
                obj.z=z;
                obj.direction=random(360);
                obj.speed=random(1);
                obj.tag=0;
                obj.baseScale=baseScale;
                obj.killer=true;
                if(irandom(2)){
                    obj.killer=false;
                    instance_fade_out(obj,100);
                    instance_change_variable(obj,"baseAlpha",0,100,tween_linear);
                }
                instance_change_variable(obj,"baseScale",0.25,floor(2*BT),tween_sine_inout);
                instance_destroy();
            }
            with(objPBullet) {
                if(tag==5){
                    killer=false;
                    instance_fade_out(id,floor(2*BT));
                    
                }
            }
            with(objP3DCircle) instance_destroy();
        }   
        if(ct==floor(2*BT)){
            with(objPPendulum) instance_destroy();   
            with(objPBullet) gravity=0.35;
            with(objPlayer){
                vspeed=-0.5;
                djump=false;
            }
            global.infJump=false;
        }
        if(ct&gt;floor(2*BT)){
            if(cameraSpeed&lt;9) cameraSpeed+=0.35;
            with(objPBullet){

                if(vspeed&gt;8) vspeed=8;
            }
            
        }
        if(ct==floor(8*BT)){ //shader effect
            with(instance_create(0,0,objPShaderEffect)){
                 shader=shDoubleWave;
                 intensity=0;
                 instance_change_variable(id,"intensity",0.02,floor(8*BT),tween_linear);
            }
        }
        if(ct&gt;floor(8*BT)){ //bullets stretch towards the player
            with(objPBullet){
                if(tag==0){
                    image_angle=point_direction(x,y,objPlayer.x,objPlayer.y);
                    image_xscale+=0.01*(ct-floor(8*BT));
                }
            }
            if(ct mod floor(0.5*BT)==1){ //cosmetic squares
                 var obj=instance_create(random(room_width),view_yview[0]+608,objPBullet);
                 obj.image_alpha=0;
                 obj.killer=false;
                 obj.tag=22;
                 obj.vspeed=6;
                 with(objPBullet){
                     if(tag==22){
                         var obj=instance_create_ext(x,y,objPTrail,9,-90,1,2);
                         obj.image_alpha=0.2;
                         obj.alphaFactor=0.005;
                         obj.alphaThreshold=0.005;    
                         obj.sprite_index=sprSquare;
                         obj.image_index=1;
                         
                    }
                 }
            }
            if(ct mod floor(BT) == 1){
                var obj=instance_create(random(room_width)-16,view_yview[0]+608,objPBullet);
                obj.image_yscale=0;
                obj.sprite_index=sprSpikeUp;
                obj.tag=2;
                obj.vspeed=9;
                instance_change_variable(obj,"image_yscale",32,floor(12*BT),tween_linear);
            }
        }
        if(ct==floor(16*BT)){
            var obj=instance_create(0,0,objPBgScreen);
            obj.depth=-99999;
            obj.image_alpha=0;
            obj.image_blend=c_red;
            instance_change_alpha(obj,1,floor(16*BT),tween_linear);
            global.noDeath=true;
        }
        //if(cameraSpeed&lt;9) cameraSpeed+=0.35;
        break;
    }
    case marenolAvoidanceAttacks.ENDING_TEXT:
    {   
        if(ct==1){
            with(objPShaderEffect) instance_destroy();
            with(objPBgScreen){
                image_blend=c_black;
            }
            var obj=instance_create(400,304,objPEndingText);
            obj.image_xscale=2.0;
            obj.image_yscale=2.0;
            
            obj.depth=-1000000;
            obj.image_alpha=1;
            obj.image_blend=c_red;
        }
        break;
    }
    case marenolAvoidanceAttacks.END:
    {
        if(ct==1){
            with(objPlayer) instance_destroy();
            room_goto(rEnd);
        }
        break;
    }
    
}


//view_yview[0]+=cameraSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug timeline
if(global.debugMode){
    draw_set_alpha(1);
    draw_set_colour(c_white);
    draw_rectangle_colour(32,32,room_width-32,48,c_black,c_black,c_black,c_black,0);
    var barPosition=lerp(32,room_width-32,(t-startTiming)/(endTiming-startTiming));
    draw_rectangle_colour(barPosition-4,32+8-16,barPosition+4,32+8+16,c_white,c_white,c_white,c_white,0);
    for(var i=0;i&lt;numTimings;++i){
        var markPosition=lerp(32,room_width-32,(timings[i]-startTiming)/(endTiming-startTiming));
        draw_rectangle_colour(markPosition-2,32+8-16,markPosition+2,32+8+16,c_white,c_white,c_white,c_white,0);
    }
    draw_set_font(fDefault12);
    draw_set_colour(c_white);
    draw_text(room_width-64,64,t);
    var spacing=32;
    for(var i=0;i&lt;numDebugSnaps;++i){
        draw_text(room_width-64,64+spacing*(i+1),debugSnaps[i]);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
