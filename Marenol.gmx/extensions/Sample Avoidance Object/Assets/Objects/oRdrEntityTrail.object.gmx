<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oRdrEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( TrailCount &lt;= 0 ) {
    exit;
}

if( !instance_exists( Owner ) ) {
    if( PrevImageAngles[PrevPositionsIndex] == -1000000 ) {
        instance_destroy();
    } else {
        PrevPositionsX[PrevPositionsIndex] = -1000000;
        PrevPositionsY[PrevPositionsIndex] = -1000000;
        PrevImageAngles[PrevPositionsIndex] = -1000000;
    }
} else {
    PrevPositionsX[PrevPositionsIndex] = Owner.x;
    PrevPositionsY[PrevPositionsIndex] = Owner.y;
    PrevImageAngles[PrevPositionsIndex] = Owner.image_angle;
}

PrevPositionsIndex++;
if( PrevPositionsIndex &gt;= MaxTrailCount ) {
    PrevPositionsIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var currentAlpha = TailAlpha * image_alpha;
var currentScaleX = TailScale * image_xscale;
var currentScaleY = TailScale * image_yscale;
var alphaDelta = image_alpha / ( TrailCount + 1 );
var scaleDeltaX = image_xscale / ( TrailCount + 1 );
var scaleDeltaY = image_yscale / ( TrailCount + 1 );
var currentIndex = PrevPositionsIndex + MaxTrailCount - TrailCount;
if( currentIndex &gt;= MaxTrailCount ) {
    currentIndex -= MaxTrailCount;
}
for( var i = 0; i &lt; TrailCount; i++ ) {
    scrRdrDrawColoredSprite( sprite_index, image_index, PrevPositionsX[currentIndex], PrevPositionsY[currentIndex], currentScaleX, currentScaleY, PrevImageAngles[currentIndex], image_blend, currentAlpha );
    currentScaleX = min( image_xscale, currentScaleX + scaleDeltaX );
    currentScaleY = min( image_yscale, currentScaleY + scaleDeltaY );
    currentAlpha = min( image_alpha, currentAlpha + alphaDelta );
    currentIndex++;
    if( currentIndex &gt;= MaxTrailCount ) {
        currentIndex = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
